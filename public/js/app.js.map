{"version":3,"sources":["webpack:///./app/lib/enums.js","webpack:///./app/firebase/middlewares/auth.js","webpack:///./app/firebase/middlewares/dashboard.js","webpack:///./app/firebase/middlewares/trello-column.js","webpack:///./app/firebase/middlewares/trell-card.js","webpack:///./app/firebase/middlewares/index.js","webpack:///./app/repositories/redux/reducer/auth.js","webpack:///./app/repositories/redux/reducer/dashboard.js","webpack:///./app/repositories/redux/reducer/trello-column.js","webpack:///./app/repositories/redux/reducer/trello-card.js","webpack:///./app/repositories/redux/reducer/user.js","webpack:///./app/repositories/redux/reducer/index.js","webpack:///./app/repositories/index.js","webpack:///./app/auth-route/index.js","webpack:///./app/static/img/freeimg_92769330046freejpg850.jpg","webpack:///./app/feature/navbar/index.js","webpack:///./app/layout-route/index.js","webpack:///./app/app.js","webpack:///./app/index.js","webpack:///./app/repositories/redux/actions/dashboard-actions.js","webpack:///./app/repositories/redux/actions/trello-column-actions.js","webpack:///./app/repositories/redux/actions/trello-card-actions.js","webpack:///./app/repositories/redux/actions/user-actions.js","webpack:///./app/firebase/index.js","webpack:///./app/firebase/config.js","webpack:///./app/routes.js","webpack:///./app/repositories/redux/actions/action-types.js","webpack:///./app/repositories/redux/actions/auth-actions.js"],"names":["LoadingStatusEnum","NONE","SUCCESS","FAILED","LOADING","START_LOGIN","actionTypes","START_LOGOUT","START_SIGNUP","signUpSuccessAction","authActions","signUpFailedAction","unsubscribeDashboardAction","dashboardActions","database","firebase","auth","UsersRef","collection","firebaseAuthMiddleware","store","next","action","dispatch","type","email","password","signInWithEmailAndPassword","signOut","username","createUserWithEmailAndPassword","then","res","doc","user","uid","set","dashboardIds","err","START_CREATE_DASHBOARD","START_DELETE_DASHBOARD","SUBSCRIBE_DASHBOARD","UNSUBSCRIBE_DASHBOARD","createDashboardSuccessAction","createDashboardFailedAction","updateDashboardSuccessAction","updateDashboardFailedAction","deleteDashboardSuccessAction","deleteDashboardFailedAction","setDashboardAction","dashboardRef","columnRef","cardRef","unsubscribeDashboard","firebaseDashboradMiddleware","userId","where","onSnapshot","snapshot","docChanges","forEach","change","dashboardId","ref","id","data","console","warn","title","add","users","currentUser","columnIds","START_UPDATE_DASHBOARD","dashboard","update","batch","columnRefPromise","get","querySnapshot","log","cardRefPromise","Promise","all","commit","error","START_CREATE_TRELLO_COLUMN","START_UPDATE_TRELLO_COLUMNS","START_DELETE_TRELLO_COLUMN","SUBSCRIBE_TRELLO_COLUMNS","UNSUBSCRIBE_TRELLO_COLUMNS","createTrelloColumnSuccessAction","trelloColumnActions","createTrelloColumnFailedAction","updateTrelloColumnsSuccessAction","updateTrelloColumnsFailedAction","deleteTrelloColumnSuccessAction","deleteTrelloColumnFailedAction","setTrelloColumnAction","unsubscribeTrelloColumns","firebaseTrelloColumnMiddleware","getState","trelloColumn","dashboardData","trelloColumnData","columnId","columnName","cardIds","columns","column","filter","cardId","START_CREATE_TRELLO_CARD","START_UPDATE_TRELLO_CARDS","START_DELETE_TRELLO_CARD","SUBSCRIBE_TRELLO_CARDS","UNSUBSCRIBE_TRELLO_CARDS","createTrelloCardSuccessAction","trelloCardActions","createTrelloCardFailedAction","updateTrelloCardsSuccessAction","updateTrelloCardsFailedAction","deleteTrelloCardSuccessAction","deleteTrelloCardFailedAction","setTrelloCard","unsubscribeTrelloCards","content","cards","card","LOGIN_SUCCESS","LOGIN_FAILED","LOGOUT_SUCCESS","LOGOUT_FAILED","SIGNUP_SUCCESS","SIGNUP_FAILED","initState","isAuthed","loginLoadingStatus","signUpLoadingStatus","authReducer","produce","draftState","START_FETCH_DASHBOARDS","FETCH_DASHBOARDS_SUCCESS","FETCH_DASHBOARDS_FAILED","CREATE_DASHBOARD_SUCCESS","CREATE_DASHBOARD_FAILED","UPDATE_DASHBOARD_SUCCESS","UPDATE_DASHBOARD_FAILED","DELETE_DASHBOARD_SUCCESS","DELETE_DASHBOARD_FAILED","SET_DASHBOARD","loadingStatus","fetchLoadingStatus","createLoadingStatus","deleteLoadingStatus","dashboardReducer","dashboards","CREATE_TRELLO_COLUMN_SUCCESS","CREATE_TRELLO_COLUMN_FAILED","UPDATE_TRELLO_COLUMNS_SUCCESS","UPDATE_TRELLO_COLUMNS_FAILED","DELETE_TRELLO_COLUMNS_SUCCES","DELETE_TRELLO_COLUMNS_FAILE","SET_TRELLO_COLUMN","CREATE_TRELLO_CARD_SUCCESS","CREATE_TRELLO_CARD_FAILED","UPDATE_TRELLO_CARDS_SUCCESS","UPDATE_TRELLO_CARDS_FAILED","SET_TRELLO_CARD","updateLoadingStatus","SET_USER","User","reducer","combineReducers","trelloCard","StoreProvider","Provider","LOGIN","RouteKeyEnums","SIGN_UP","FORGET_PASSWORD","TEST","omitPaths","propTypes","location","PropTypes","shape","pathname","string","isRequired","render","func","AuthRoute","authData","useSelector","state","omitPath","indexOf","length","checkIsOmitPath","to","from","withRouter","useStyles","makeStyles","root","flexGrow","menuButton","color","titleLink","textDecoration","fontWeight","bool","onNavigate","NavBar","classes","useDispatch","userData","useState","anchorEl","setAnchorEl","handleCloseMenu","className","AppBar","position","Toolbar","Typography","variant","IconButton","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","HOME","logoutAction","useStyle","layout","backgroundImage","Img","backgroundRepeat","backgroundSize","backgroundAttachment","minHeight","history","object","LayoutRoute","uri","options","passProps","push","onBack","goBack","CssBaseline","fallback","renderRoutes","routes","App","Component","middlewares","firebaseMiddleWares","reduxCreateStore","applyMiddleware","configFirebaseListener","createStore","ReactDOM","document","getElementById","fetchDashboardsAction","fetchDashboardsSuccessAction","fetchDashboardsFailedAction","createDashboardAction","updateDashboardAction","deleteDahsboardAction","subscribeDashboardAction","createTrelloColumnAction","updateTrelloColumnsAction","deleteTrelloColumnAction","subscribeTrelloColumnsAction","unsubscribeTrelloColumnsAction","createTrelloCardAction","updateTrelloCardsAction","deleteTrelloCardAction","DELETE_TRELLO_CARD_SUCCESS","DELETE_TRELLO_CARD_FAILED","subscriptTrelloCardsAction","unsubscriptTrelloCardsAction","setUserAction","logoutSuccessAction","loginSuccessAction","userActions","createContext","app","onAuthStateChanged","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Login","lazy","SignUp","ForgetPassword","Home","Dashboard","Test","ROOT","DASHBOARD","path","exact","component","loginAction","loginFailedAction","logoutFailedAction","signUpAction"],"mappings":"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","file":"js/app.js","sourcesContent":["export const LoadingStatusEnum = {\n\tNONE: 0,\n\tSUCCESS: 1,\n\tFAILED: 2,\n\tLOADING: 3,\n};\n","import { firebase } from '../index';\nimport {\n\tactionTypes,\n\tauthActions,\n\tdashboardActions,\n} from '../../repositories/redux/actions';\n\nconst {\n\tSTART_LOGIN,\n\tSTART_LOGOUT,\n\tSTART_SIGNUP,\n} = actionTypes;\nconst {\n\tsignUpSuccessAction,\n\tsignUpFailedAction,\n} = authActions;\nconst {\n\tunsubscribeDashboardAction,\n} = dashboardActions;\nconst { database, auth } = firebase;\nconst UsersRef = database.collection('users');\n\nconst firebaseAuthMiddleware = store => next => action => {\n\tconst { dispatch } = store;\n\n\tswitch (action.type) {\n\t\tcase START_LOGIN: {\n\t\t\tconst { email, password } = action;\n\n\t\t\tauth.signInWithEmailAndPassword(email, password);\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase START_LOGOUT: {\n\t\t\tdispatch(unsubscribeDashboardAction());\n\t\t\tauth.signOut();\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase START_SIGNUP: {\n\t\t\tconst { email, password, username } = action;\n\n\t\t\tauth.createUserWithEmailAndPassword(email, password)\n\t\t\t\t.then(res => {\n\t\t\t\t\tUsersRef.doc(res.user.uid).set({\n\t\t\t\t\t\temail,\n\t\t\t\t\t\tusername,\n\t\t\t\t\t\tdashboardIds: [],\n\t\t\t\t\t});\n\t\t\t\t\tdispatch(signUpSuccessAction());\n\t\t\t\t})\n\t\t\t\t.catch(err => dispatch(signUpFailedAction(err)));\n\n\t\t\tbreak;\n\t\t}\n\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn next(action);\n};\n\nexport default firebaseAuthMiddleware;\n","import { firebase } from '../index';\nimport {\n\tactionTypes,\n\tdashboardActions,\n} from '../../repositories/redux/actions';\nimport { START_UPDATE_DASHBOARD } from '../../repositories/redux/actions/action-types';\n\nconst {\n\tSTART_CREATE_DASHBOARD,\n\tSTART_DELETE_DASHBOARD,\n\tSUBSCRIBE_DASHBOARD,\n\tUNSUBSCRIBE_DASHBOARD,\n} = actionTypes;\nconst {\n\tcreateDashboardSuccessAction,\n\tcreateDashboardFailedAction,\n\tupdateDashboardSuccessAction,\n\tupdateDashboardFailedAction,\n\tdeleteDashboardSuccessAction,\n\tdeleteDashboardFailedAction,\n\tsetDashboardAction,\n} = dashboardActions;\n\nconst { database, auth } = firebase;\nconst dashboardRef = database.collection('dashboard');\nconst columnRef = database.collection('column');\nconst cardRef = database.collection('card');\n\nlet unsubscribeDashboard = () => {};\n\nconst firebaseDashboradMiddleware = store => next => action => {\n\tconst { dispatch } = store;\n\n\tswitch (action.type) {\n\t\tcase SUBSCRIBE_DASHBOARD: {\n\t\t\tconst { userId } = action;\n\n\t\t\tunsubscribeDashboard = dashboardRef.where('users', 'array-contains', userId)\n\t\t\t\t.onSnapshot(snapshot => {\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\n\t\t\t\t\t\tconst dashboardId = change.doc.ref.id;\n\n\t\t\t\t\t\tif (change.type === 'added' || change.type === 'modified') {\n\t\t\t\t\t\t\tdispatch(setDashboardAction(dashboardId, change.doc.data()));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (change.type === 'removed') {\n\t\t\t\t\t\t\tdispatch(setDashboardAction(dashboardId));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, err => console.warn(err));\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase UNSUBSCRIBE_DASHBOARD: {\n\t\t\tunsubscribeDashboard();\n\t\t\tbreak;\n\t\t}\n\n\t\tcase START_CREATE_DASHBOARD: {\n\t\t\tconst { title } = action;\n\n\t\t\tdashboardRef.add({\n\t\t\t\ttitle,\n\t\t\t\tusers: [auth.currentUser.uid],\n\t\t\t\tcolumnIds: [],\n\t\t\t})\n\t\t\t\t.then(() => dispatch(updateDashboardSuccessAction()))\n\t\t\t\t.catch(err => dispatch(createDashboardFailedAction(err)));\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase START_UPDATE_DASHBOARD: {\n\t\t\tconst { dashboardId, dashboard } = action;\n\n\t\t\tdashboardRef.doc(dashboardId)\n\t\t\t\t.update(dashboard)\n\t\t\t\t.then(() => dispatch(createDashboardSuccessAction()))\n\t\t\t\t.catch(err => dispatch(updateDashboardFailedAction(err)));\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase START_DELETE_DASHBOARD: {\n\t\t\tconst { dashboardId } = action;\n\t\t\tconst batch = database.batch();\n\n\t\t\tbatch.delete(dashboardRef.doc(dashboardId));\n\n\t\t\tconst columnRefPromise = columnRef.where('dashboardId', '==', dashboardId)\n\t\t\t\t.get()\n\t\t\t\t.then(querySnapshot => {\n\t\t\t\t\tquerySnapshot.forEach(doc => {\n\t\t\t\t\t\tconsole.log('columnRefPromise', doc.id);\n\t\t\t\t\t\tbatch.delete(columnRef.doc(doc.id));\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tconst cardRefPromise = cardRef.where('dashboardId', '==', dashboardId)\n\t\t\t\t.get()\n\t\t\t\t.then(querySnapshot => {\n\t\t\t\t\tquerySnapshot.forEach(doc => {\n\t\t\t\t\t\tconsole.log('columnRefPromise', doc.id);\n\t\t\t\t\t\tbatch.delete(cardRef.doc(doc.id));\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\tPromise.all([columnRefPromise, cardRefPromise])\n\t\t\t\t.then(() => batch.commit())\n\t\t\t\t.then(() => dispatch(deleteDashboardSuccessAction()))\n\t\t\t\t.catch(error => dispatch(deleteDashboardFailedAction(error)));\n\n\t\t\tbreak;\n\t\t}\n\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn next(action);\n};\n\nexport default firebaseDashboradMiddleware;\n","import { firebase } from '../index';\nimport {\n\tactionTypes,\n\ttrelloColumnActions,\n} from '../../repositories/redux/actions';\n\nconst {\n\tSTART_CREATE_TRELLO_COLUMN,\n\tSTART_UPDATE_TRELLO_COLUMNS,\n\tSTART_DELETE_TRELLO_COLUMN,\n\tSUBSCRIBE_TRELLO_COLUMNS,\n\tUNSUBSCRIBE_TRELLO_COLUMNS,\n} = actionTypes;\nconst {\n\tcreateTrelloColumnSuccessAction,\n\tcreateTrelloColumnFailedAction,\n\tupdateTrelloColumnsSuccessAction,\n\tupdateTrelloColumnsFailedAction,\n\tdeleteTrelloColumnSuccessAction,\n\tdeleteTrelloColumnFailedAction,\n\tsetTrelloColumnAction,\n} = trelloColumnActions;\n\nconst { database } = firebase;\nconst dashboardRef = database.collection('dashboard');\nconst columnRef = database.collection('column');\nconst cardRef = database.collection('card');\n\nlet unsubscribeTrelloColumns = () => {};\n\nconst firebaseTrelloColumnMiddleware = store => next => action => {\n\tconst { dispatch, getState } = store;\n\tconst { dashboard, trelloColumn } = getState();\n\tconst dashboardData = dashboard.data;\n\tconst trelloColumnData = trelloColumn.data;\n\n\tswitch (action.type) {\n\t\tcase SUBSCRIBE_TRELLO_COLUMNS: {\n\t\t\tconst { dashboardId } = action;\n\n\t\t\tunsubscribeTrelloColumns = columnRef.where('dashboardId', '==', dashboardId)\n\t\t\t\t.onSnapshot(snapshot => {\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\n\t\t\t\t\t\tconst columnId = change.doc.ref.id;\n\n\t\t\t\t\t\tif (change.type === 'added' || change.type === 'modified') {\n\t\t\t\t\t\t\tdispatch(setTrelloColumnAction(columnId, change.doc.data()));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (change.type === 'removed') {\n\t\t\t\t\t\t\tdispatch(setTrelloColumnAction(columnId));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, err => console.warn(err));\n\t\t\tbreak;\n\t\t}\n\n\t\tcase UNSUBSCRIBE_TRELLO_COLUMNS: {\n\t\t\tunsubscribeTrelloColumns();\n\t\t\tbreak;\n\t\t}\n\n\t\tcase START_CREATE_TRELLO_COLUMN: {\n\t\t\tconst { columnName, dashboardId } = action;\n\n\t\t\tcolumnRef.add({\n\t\t\t\ttitle: columnName,\n\t\t\t\tdashboardId,\n\t\t\t\tcardIds: [],\n\t\t\t})\n\t\t\t\t.then(res => {\n\t\t\t\t\tdashboardRef.doc(dashboardId).update({ columnIds: [\n\t\t\t\t\t\t...dashboardData[dashboardId].columnIds,\n\t\t\t\t\t\tres.id,\n\t\t\t\t\t] });\n\t\t\t\t\tdispatch(createTrelloColumnSuccessAction());\n\t\t\t\t})\n\t\t\t\t.catch(err => dispatch(createTrelloColumnFailedAction(err)));\n\t\t\tbreak;\n\t\t}\n\n\t\tcase START_UPDATE_TRELLO_COLUMNS: {\n\t\t\tconst { columns } = action;\n\t\t\tconst batch = database.batch();\n\n\t\t\tcolumns.forEach(({ columnId, column }) => {\n\t\t\t\tbatch.update(columnRef.doc(columnId), column);\n\t\t\t});\n\n\t\t\tbatch.commit()\n\t\t\t\t.then(() => {\n\t\t\t\t\tdispatch(updateTrelloColumnsSuccessAction());\n\t\t\t\t})\n\t\t\t\t.catch(error => dispatch(updateTrelloColumnsFailedAction(error)));\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase START_DELETE_TRELLO_COLUMN: {\n\t\t\tconst { columnId } = action;\n\t\t\tconst batch = database.batch();\n\t\t\tconst { cardIds, dashboardId } = trelloColumnData[columnId];\n\t\t\tconst { columnIds } = dashboardData[dashboardId];\n\n\t\t\tbatch.delete(columnRef.doc(columnId));\n\t\t\tbatch.update(dashboardRef.doc(dashboardId), { columnIds: columnIds.filter(id => id !== columnId) });\n\n\t\t\tcardIds.forEach(cardId => {\n\t\t\t\tbatch.delete(cardRef.doc(cardId));\n\t\t\t});\n\n\t\t\tbatch.commit()\n\t\t\t\t.then(() => deleteTrelloColumnSuccessAction())\n\t\t\t\t.catch(error => deleteTrelloColumnFailedAction(error));\n\n\t\t\tbreak;\n\t\t}\n\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn next(action);\n};\n\nexport default firebaseTrelloColumnMiddleware;\n","import { firebase } from '../index';\nimport {\n\tactionTypes,\n\ttrelloCardActions,\n} from '../../repositories/redux/actions';\n\nconst {\n\tSTART_CREATE_TRELLO_CARD,\n\tSTART_UPDATE_TRELLO_CARDS,\n\tSTART_DELETE_TRELLO_CARD,\n\tSUBSCRIBE_TRELLO_CARDS,\n\tUNSUBSCRIBE_TRELLO_CARDS,\n} = actionTypes;\nconst {\n\tcreateTrelloCardSuccessAction,\n\tcreateTrelloCardFailedAction,\n\tupdateTrelloCardsSuccessAction,\n\tupdateTrelloCardsFailedAction,\n\tdeleteTrelloCardSuccessAction,\n\tdeleteTrelloCardFailedAction,\n\tsetTrelloCard,\n} = trelloCardActions;\n\nconst { database } = firebase;\nconst columnRef = database.collection('column');\nconst cardRef = database.collection('card');\n\nlet unsubscribeTrelloCards = () => {};\n\nconst firebaseTrelloCardMiddleware = store => next => action => {\n\tconst { dispatch, getState } = store;\n\tconst trelloColumnData = getState().trelloColumn.data;\n\n\tswitch (action.type) {\n\t\tcase SUBSCRIBE_TRELLO_CARDS: {\n\t\t\tconst { dashboardId } = action;\n\n\t\t\tunsubscribeTrelloCards = cardRef.where('dashboardId', '==', dashboardId)\n\t\t\t\t.onSnapshot(snapshot => {\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\n\t\t\t\t\t\tconst cardId = change.doc.ref.id;\n\n\t\t\t\t\t\tif (change.type === 'added' || change.type === 'modified') {\n\t\t\t\t\t\t\tdispatch(setTrelloCard(cardId, change.doc.data()));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (change.type === 'removed') {\n\t\t\t\t\t\t\tdispatch(setTrelloCard(cardId));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, err => console.warn(err));\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase UNSUBSCRIBE_TRELLO_CARDS: {\n\t\t\tunsubscribeTrelloCards();\n\t\t\tbreak;\n\t\t}\n\n\t\tcase START_CREATE_TRELLO_CARD: {\n\t\t\tconst { title, columnId, dashboardId } = action;\n\n\t\t\tcardRef.add({\n\t\t\t\ttitle,\n\t\t\t\tdashboardId,\n\t\t\t\tcontent: 'content',\n\t\t\t})\n\t\t\t\t.then(res => {\n\t\t\t\t\tcolumnRef.doc(columnId).update({ cardIds: [\n\t\t\t\t\t\t...trelloColumnData[columnId].cardIds,\n\t\t\t\t\t\tres.id,\n\t\t\t\t\t] });\n\t\t\t\t\tdispatch(createTrelloCardSuccessAction());\n\t\t\t\t})\n\t\t\t\t.catch(err => dispatch(createTrelloCardFailedAction(err)));\n\t\t\tbreak;\n\t\t}\n\n\t\tcase START_UPDATE_TRELLO_CARDS: {\n\t\t\tconst { cards } = action;\n\t\t\tconst batch = database.batch();\n\n\t\t\tcards.forEach(({ cardId, card }) => {\n\t\t\t\tbatch.update(cardRef.doc(cardId), card);\n\t\t\t});\n\n\t\t\tbatch.commit()\n\t\t\t\t.then(() => dispatch(updateTrelloCardsSuccessAction()))\n\t\t\t\t.catch(() => dispatch(updateTrelloCardsFailedAction()));\n\n\t\t\tbreak;\n\t\t}\n\n\t\tcase START_DELETE_TRELLO_CARD: {\n\t\t\tconst { cardId, columnId } = action;\n\t\t\tconst batch = database.batch();\n\n\t\t\tbatch.delete(cardRef.doc(cardId));\n\n\t\t\tbatch.update(columnRef.doc(columnId), {\n\t\t\t\tcardIds: trelloColumnData[columnId].cardIds.filter(id => id !== cardId),\n\t\t\t});\n\n\t\t\tbatch.commit()\n\t\t\t\t.then(() => deleteTrelloCardSuccessAction())\n\t\t\t\t.catch(error => deleteTrelloCardFailedAction(error));\n\n\t\t\tbreak;\n\t\t}\n\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn next(action);\n};\n\nexport default firebaseTrelloCardMiddleware;\n","import firebaseAuthMiddleware from './auth';\nimport firebaseDashboradMiddleware from './dashboard';\nimport firebaseTrelloColumnMiddleware from './trello-column';\nimport firebaseTrelloCardMiddleware from './trell-card';\n\nexport default [\n\tfirebaseAuthMiddleware,\n\tfirebaseDashboradMiddleware,\n\tfirebaseTrelloColumnMiddleware,\n\tfirebaseTrelloCardMiddleware,\n];\n","import { actionTypes } from '../actions';\nimport { LoadingStatusEnum } from '../../../lib/enums';\nimport produce from 'immer';\n\nconst { NONE, LOADING, SUCCESS, FAILED } = LoadingStatusEnum;\nconst {\n\tSTART_LOGIN,\n\tLOGIN_SUCCESS,\n\tLOGIN_FAILED,\n\tSTART_LOGOUT,\n\tLOGOUT_SUCCESS,\n\tLOGOUT_FAILED,\n\tSTART_SIGNUP,\n\tSIGNUP_SUCCESS,\n\tSIGNUP_FAILED,\n} = actionTypes;\n\nconst initState = {\n\tisAuthed: false,\n\tloginLoadingStatus: NONE,\n\tsignUpLoadingStatus: NONE,\n\terror: {},\n};\n\nconst authReducer = produce((draftState = initState, action) => {\n\tswitch (action.type) {\n\t\tcase START_LOGIN: {\n\t\t\tdraftState.loginLoadingStatus = LOADING;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase LOGIN_SUCCESS: {\n\t\t\tdraftState.loginLoadingStatus = SUCCESS;\n\t\t\tdraftState.isAuthed = true;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase LOGIN_FAILED: {\n\t\t\tconst { error } = action;\n\n\t\t\tdraftState.loginLoadingStatus = FAILED;\n\t\t\tdraftState.error = error;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase START_LOGOUT: {\n\t\t\tdraftState.loginLoadingStatus = LOADING;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase LOGOUT_SUCCESS: {\n\t\t\tdraftState.loginLoadingStatus = SUCCESS;\n\t\t\tdraftState.isAuthed = false;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase LOGOUT_FAILED: {\n\t\t\tconst { error } = action;\n\n\t\t\tdraftState.loginLoadingStatus = FAILED;\n\t\t\tdraftState.error = error;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase START_SIGNUP: {\n\t\t\tdraftState.signUpLoadingStatus = LOADING;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase SIGNUP_SUCCESS: {\n\t\t\tdraftState.signUpLoadingStatus = SUCCESS;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase SIGNUP_FAILED: {\n\t\t\tconst { error } = action;\n\n\t\t\tdraftState.signUpLoadingStatus = FAILED;\n\t\t\tdraftState.error = error;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn draftState;\n\t}\n});\n\nexport default authReducer;\n","import { actionTypes } from '../actions';\nimport { LoadingStatusEnum } from '../../../lib/enums';\nimport produce from 'immer';\n\nconst { NONE, LOADING, SUCCESS, FAILED } = LoadingStatusEnum;\nconst {\n\tSTART_FETCH_DASHBOARDS,\n\tFETCH_DASHBOARDS_SUCCESS,\n\tFETCH_DASHBOARDS_FAILED,\n\tSTART_CREATE_DASHBOARD,\n\tCREATE_DASHBOARD_SUCCESS,\n\tCREATE_DASHBOARD_FAILED,\n\tSTART_UPDATE_DASHBOARD,\n\tUPDATE_DASHBOARD_SUCCESS,\n\tUPDATE_DASHBOARD_FAILED,\n\tSTART_DELETE_DASHBOARD,\n\tDELETE_DASHBOARD_SUCCESS,\n\tDELETE_DASHBOARD_FAILED,\n\tSET_DASHBOARD,\n} = actionTypes;\n\n// Example\n// data: {\n// \t'dashboardId': {\n// \t\ttitle: 'dashboard-1',\n// \t\tusers: ['userId']\n// \t}\n// }\n\nconst initState = {\n\tdata: {},\n\n\tloadingStatus: NONE,\n\tfetchLoadingStatus: NONE,\n\tcreateLoadingStatus: NONE,\n\tdeleteLoadingStatus: NONE,\n\terror: {},\n};\n\nconst dashboardReducer = produce((draftState = initState, action) => {\n\tswitch (action.type) {\n\t\tcase START_FETCH_DASHBOARDS: {\n\t\t\tdraftState.fetchLoadingStatus = LOADING;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase FETCH_DASHBOARDS_SUCCESS: {\n\t\t\tdraftState.fetchLoadingStatus = SUCCESS;\n\t\t\tdraftState.data = action.dashboards;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase FETCH_DASHBOARDS_FAILED: {\n\t\t\tdraftState.fetchLoadingStatus = FAILED;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase START_CREATE_DASHBOARD: {\n\t\t\tdraftState.createLoadingStatus = LOADING;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase CREATE_DASHBOARD_SUCCESS: {\n\t\t\tdraftState.createLoadingStatus = SUCCESS;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase CREATE_DASHBOARD_FAILED: {\n\t\t\tdraftState.createLoadingStatus = FAILED;\n\t\t\tdraftState.error = action.error;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase START_UPDATE_DASHBOARD: {\n\t\t\tdraftState.loadingStatus = LOADING;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase UPDATE_DASHBOARD_SUCCESS: {\n\t\t\tdraftState.loadingStatus = SUCCESS;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase UPDATE_DASHBOARD_FAILED: {\n\t\t\tdraftState.loadingStatus = FAILED;\n\t\t\tdraftState.error = action.error;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase START_DELETE_DASHBOARD: {\n\t\t\tdraftState.deleteLoadingStatus = LOADING;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase DELETE_DASHBOARD_SUCCESS: {\n\t\t\tdraftState.deleteLoadingStatus = SUCCESS;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase DELETE_DASHBOARD_FAILED: {\n\t\t\tdraftState.deleteLoadingStatus = FAILED;\n\t\t\tdraftState.error = action.error;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase SET_DASHBOARD: {\n\t\t\tconst { dashboard, dashboardId } = action;\n\n\t\t\tif (dashboard) {\n\t\t\t\tdraftState.data[dashboardId] = dashboard;\n\t\t\t} else {\n\t\t\t\tdelete draftState.data[dashboardId];\n\t\t\t}\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn draftState;\n\t}\n});\n\nexport default dashboardReducer;\n","import { actionTypes } from '../actions';\nimport { LoadingStatusEnum } from '../../../lib/enums';\nimport produce from 'immer';\n\nconst { NONE, LOADING, SUCCESS, FAILED } = LoadingStatusEnum;\nconst {\n\tSTART_CREATE_TRELLO_COLUMN,\n\tCREATE_TRELLO_COLUMN_SUCCESS,\n\tCREATE_TRELLO_COLUMN_FAILED,\n\tSTART_UPDATE_TRELLO_COLUMNS,\n\tUPDATE_TRELLO_COLUMNS_SUCCESS,\n\tUPDATE_TRELLO_COLUMNS_FAILED,\n\tSTART_DELETE_TRELLO_COLUMN,\n\tDELETE_TRELLO_COLUMNS_SUCCES,\n\tDELETE_TRELLO_COLUMNS_FAILE,\n\tSET_TRELLO_COLUMN,\n} = actionTypes;\n\n// Example\n// data: {\n// \t'columnId': {\n// \t\tdashboardId: 'dashboardId',\n// \t\ttitle: 'ColumnTitle',\n// \t\tcardIds: ['cardId-1', 'cardID-2'],\n// \t},\n\nconst initState = {\n\tdata: {},\n\n\tloadingStatus: NONE,\n\tcreateLoadingStatus: NONE,\n\tdeleteLoadingStatus: NONE,\n\terror: {},\n};\n\nconst trelloColumn = produce((draftState = initState, action) => {\n\tswitch (action.type) {\n\t\tcase START_CREATE_TRELLO_COLUMN: {\n\t\t\tdraftState.createLoadingStatus = LOADING;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase CREATE_TRELLO_COLUMN_SUCCESS: {\n\t\t\tdraftState.createLoadingStatus = SUCCESS;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase CREATE_TRELLO_COLUMN_FAILED: {\n\t\t\tdraftState.createLoadingStatus = FAILED;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase START_UPDATE_TRELLO_COLUMNS: {\n\t\t\tdraftState.loadingStatus = LOADING;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase UPDATE_TRELLO_COLUMNS_SUCCESS: {\n\t\t\tdraftState.loadingStatus = SUCCESS;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase UPDATE_TRELLO_COLUMNS_FAILED: {\n\t\t\tdraftState.loadingStatus = FAILED;\n\t\t\tdraftState.error = action.error;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase START_DELETE_TRELLO_COLUMN: {\n\t\t\tdraftState.deleteLoadingStatus = LOADING;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase DELETE_TRELLO_COLUMNS_SUCCES: {\n\t\t\tdraftState.deleteLoadingStatus = SUCCESS;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase DELETE_TRELLO_COLUMNS_FAILE: {\n\t\t\tdraftState.deleteLoadingStatus = FAILED;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase SET_TRELLO_COLUMN: {\n\t\t\tconst { columnId, column } = action;\n\n\t\t\tif (column) {\n\t\t\t\tdraftState.data[columnId] = column;\n\t\t\t} else {\n\t\t\t\tdelete draftState.data[columnId];\n\t\t\t}\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn draftState;\n\t}\n});\n\nexport default trelloColumn;\n\n","import { actionTypes } from '../actions';\nimport { LoadingStatusEnum } from '../../../lib/enums';\nimport produce from 'immer';\n\nconst { NONE, LOADING, SUCCESS, FAILED } = LoadingStatusEnum;\nconst {\n\tSTART_CREATE_TRELLO_CARD,\n\tCREATE_TRELLO_CARD_SUCCESS,\n\tCREATE_TRELLO_CARD_FAILED,\n\tSTART_UPDATE_TRELLO_CARDS,\n\tUPDATE_TRELLO_CARDS_SUCCESS,\n\tUPDATE_TRELLO_CARDS_FAILED,\n\tSET_TRELLO_CARD,\n} = actionTypes;\n\n// Example\n// data: {\n// \t'cardId': {\n// \t\tcolumnId: 'columnId',\n// \t\ttitle: 'cardTitle',\n// \t\tcontent: 'content',\n// \t},\nconst initState = {\n\tdata: {},\n\n\tupdateLoadingStatus: NONE,\n\tcreateLoadingStatus: NONE,\n\terror: {},\n};\n\nconst trelloColumn = produce((draftState = initState, action) => {\n\tswitch (action.type) {\n\t\tcase START_CREATE_TRELLO_CARD: {\n\t\t\tdraftState.createLoadingStatus = LOADING;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase CREATE_TRELLO_CARD_SUCCESS: {\n\t\t\tdraftState.createLoadingStatus = SUCCESS;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase CREATE_TRELLO_CARD_FAILED: {\n\t\t\tdraftState.createLoadingStatus = FAILED;\n\t\t\tdraftState.error = action.error;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase START_UPDATE_TRELLO_CARDS: {\n\t\t\tdraftState.updateLoadingStatus = LOADING;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase UPDATE_TRELLO_CARDS_SUCCESS: {\n\t\t\tdraftState.updateLoadingStatus = SUCCESS;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase UPDATE_TRELLO_CARDS_FAILED: {\n\t\t\tdraftState.updateLoadingStatus = FAILED;\n\t\t\tdraftState.error = action.error;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tcase SET_TRELLO_CARD: {\n\t\t\tconst { cardId, card } = action;\n\n\t\t\tif (card) {\n\t\t\t\tdraftState.data[cardId] = card;\n\t\t\t} else {\n\t\t\t\tdelete draftState.data[cardId];\n\t\t\t}\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn draftState;\n\t}\n});\n\nexport default trelloColumn;\n\n","import { actionTypes } from '../actions';\nimport produce from 'immer';\n\nconst {\n\tSET_USER,\n} = actionTypes;\n\nconst initState = {\n\tusername: '',\n\temail: '',\n\tdashboardIds: [],\n};\n\nconst User = produce((draftState = initState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_USER: {\n\t\t\tconst { user } = action;\n\n\t\t\tdraftState = user;\n\n\t\t\treturn draftState;\n\t\t}\n\n\t\tdefault:\n\t\t\treturn draftState;\n\t}\n});\n\nexport default User;\n\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport dashboard from './dashboard';\nimport trelloColumn from './trello-column';\nimport trelloCard from './trello-card';\nimport user from './user';\n\nconst reducer = combineReducers(\n\t{\n\t\tauth,\n\t\tdashboard,\n\t\ttrelloColumn,\n\t\ttrelloCard,\n\t\tuser,\n\t}\n);\n\nexport default reducer;\n","import {\n\tcreateStore as reduxCreateStore,\n\tapplyMiddleware,\n} from 'redux';\nimport loggerMiddleWare from 'redux-logger';\nimport firebaseMiddleWares from '../firebase/middlewares';\nimport { configFirebaseListener } from '../firebase';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport { reducer } from './redux';\n\nif (!process.env) {\n\tprocess.env = {};\n}\n\nexport function createStore(initState = {}, options = {}) {\n\tlet middlewares;\n\tlet store;\n\n\tif (process.env.NODE_ENV === 'production' || process.env.NODE_ENV === 'pre-production') {\n\t\tmiddlewares = [\n\t\t\t...firebaseMiddleWares,\n\t\t];\n\t\tstore = reduxCreateStore(reducer, initState, applyMiddleware(...middlewares));\n\t} else {\n\t\tmiddlewares = [\n\t\t\t...firebaseMiddleWares,\n\t\t\tloggerMiddleWare,\n\t\t];\n\t\tstore = reduxCreateStore(reducer, initState, composeWithDevTools(applyMiddleware(...middlewares)));\n\t}\n\n\tconfigFirebaseListener(store);\n\n\treturn store;\n}\n\nexport const StoreProvider = Provider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n\tRedirect,\n\twithRouter,\n} from 'react-router-dom';\nimport { RouteKeyEnums } from '../routes';\nimport { useSelector } from 'react-redux';\nimport { LoadingStatusEnum } from '../lib/enums';\n\nconst {\n\tLOGIN,\n\tSIGN_UP,\n\tFORGET_PASSWORD,\n\tTEST,\n} = RouteKeyEnums;\nconst { NONE, LOADING } = LoadingStatusEnum;\nconst omitPaths = [\n\tLOGIN,\n\tSIGN_UP,\n\tFORGET_PASSWORD,\n\tTEST,\n];\n\nconst propTypes = {\n\tlocation: PropTypes.shape({\n\t\tpathname: PropTypes.string.isRequired,\n\t}).isRequired,\n\trender: PropTypes.func.isRequired,\n};\n\nexport function AuthRoute({\n\tlocation,\n\trender,\n}) {\n\tconst authData = useSelector(state => state.auth);\n\tconst { isAuthed, loginLoadingStatus } = authData;\n\n\tif (checkIsOmitPath(location.pathname)) {\n\t\treturn render({ isAuthed: false });\n\t}\n\n\tif (loginLoadingStatus === LOADING || loginLoadingStatus === NONE) {\n\t\treturn <div>Auth Checking...</div>;\n\t}\n\n\tif (!isAuthed) {\n\t\treturn (\n\t\t\t<Redirect\n\t\t\t\tto={{\n\t\t\t\t\tpathname: LOGIN,\n\t\t\t\t\tstate: {\n\t\t\t\t\t\tfrom: location.pathname,\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn render({ isAuthed });\n}\n\nAuthRoute.propTypes = propTypes;\n\nfunction checkIsOmitPath(pathname = '') {\n\tconst filteredOmitPaths = omitPaths\n\t\t.filter(omitPath => pathname.indexOf(omitPath) === 0);\n\n\treturn filteredOmitPaths.length > 0;\n}\n\nexport default withRouter(AuthRoute);\n","export default __webpack_public_path__ + \"36235a7fff65b050958842c98b6c5b76.jpg\";","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutAction } from '../../repositories/redux/actions/auth-actions';\nimport { Link } from 'react-router-dom';\nimport { RouteKeyEnums } from '../../routes';\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tmenuButton: {\n\t\tcolor: '#fff',\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t},\n\ttitleLink: {\n\t\tcolor: 'white',\n\t\ttextDecoration: 'none',\n\t\tfontWeight: 'bold',\n\t},\n});\n\nconst propTypes = {\n\tisAuthed: PropTypes.bool,\n\tonNavigate: PropTypes.func,\n};\n\nfunction NavBar({\n\tisAuthed,\n\tonNavigate,\n}) {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst userData = useSelector(state => state.user);\n\tconst [anchorEl, setAnchorEl] = useState(null);\n\n\tfunction _handleOpenMenu(event) {\n\t\tsetAnchorEl(event.currentTarget);\n\t}\n\n\tfunction handleCloseMenu() {\n\t\tsetAnchorEl(null);\n\t}\n\n\tfunction _handleLogout() {\n\t\tdispatch(logoutAction());\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t\t\t\t\t<Link to=\"/\" className={classes.titleLink}>\n\t\t\t\t\t\t\tTrellooooo\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{isAuthed && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h2>{userData.username}</h2>\n\t\t\t\t\t\t\t<IconButton className={classes.menuButton}>\n\t\t\t\t\t\t\t\t<MenuIcon onClick={_handleOpenMenu}/>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\t\t\t\t\tonClose={handleCloseMenu}\n\t\t\t\t\t\t\t\tonClick={handleCloseMenu}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuItem onClick={() => onNavigate(RouteKeyEnums.HOME)}>Profile</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem onClick={_handleLogout}>Logout</MenuItem>\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n}\n\nNavBar.propTypes = propTypes;\n\nexport default NavBar;\n","import React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { renderRoutes } from 'react-router-config';\nimport { withRouter } from 'react-router-dom';\nimport routes from '../routes';\nimport { makeStyles, CssBaseline } from '@material-ui/core';\nimport Img from '../static/img/freeimg_92769330046freejpg850.jpg';\nimport NavBar from '../feature/navbar';\nimport { useSelector } from 'react-redux';\n\nconst useStyle = makeStyles({\n\tlayout: {\n\t\tbackgroundImage: `url(${Img})`,\n\t\tbackgroundRepeat: 'no-repeat',\n\t\tbackgroundSize: 'cover',\n\t\tbackgroundAttachment: 'fixed',\n\t\tminHeight: '100vh',\n\t},\n});\n\nconst propTypes = {\n\tlocation: PropTypes.shape({\n\t\tpathname: PropTypes.string.isRequired,\n\t}).isRequired,\n\thistory: PropTypes.object,\n};\n\nfunction LayoutRoute({\n\thistory,\n}) {\n\tconst classes = useStyle();\n\tconst authData = useSelector(state => state.auth);\n\tconst { isAuthed } = authData;\n\n\tfunction onNavigate(uri, options = { passProps: {} }) {\n\t\thistory.push({\n\t\t\tpathname: uri,\n\t\t\tpassProps: options.passProps,\n\t\t});\n\t}\n\n\tfunction onBack() {\n\t\thistory.goBack();\n\t}\n\n\tfunction _renderPublicLayout() {\n\t\treturn renderRoutes(routes, {\n\t\t\tonNavigate,\n\t\t\tonBack,\n\t\t});\n\t}\n\n\tfunction _renderPrivateLayout() {\n\t\treturn renderRoutes(routes, {\n\t\t\tonNavigate,\n\t\t\tonBack,\n\t\t});\n\t}\n\n\treturn (\n\t\t<div className={classes.layout}>\n\t\t\t<CssBaseline/>\n\t\t\t<NavBar isAuthed={isAuthed} onNavigate={onNavigate}/>\n\t\t\t<Suspense\n\t\t\t\tfallback={<div>loading</div>}\n\t\t\t>\n\t\t\t\t{isAuthed ? _renderPrivateLayout() : _renderPublicLayout()}\n\t\t\t</Suspense>\n\t\t</div>\n\t);\n}\n\nLayoutRoute.propTypes = propTypes;\n\nexport default withRouter(LayoutRoute);\n","import React, { Component } from 'react';\nimport AuthRoute from './auth-route';\nimport LayoutRoute from './layout-route';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<AuthRoute\n\t\t\t\trender={isAuthed => <LayoutRoute isAuthed={isAuthed}/>}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, StoreProvider } from './repositories';\nimport App from './app';\n\nconst store = createStore();\n\nReactDOM.render(\n\t<StoreProvider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App/>\n\t\t</BrowserRouter>\n\t</StoreProvider>,\n\tdocument.getElementById('root')\n);\n","import {\n\tSTART_FETCH_DASHBOARDS,\n\tFETCH_DASHBOARDS_SUCCESS,\n\tFETCH_DASHBOARDS_FAILED,\n\tSTART_CREATE_DASHBOARD,\n\tCREATE_DASHBOARD_SUCCESS,\n\tCREATE_DASHBOARD_FAILED,\n\tSTART_UPDATE_DASHBOARD,\n\tUPDATE_DASHBOARD_SUCCESS,\n\tUPDATE_DASHBOARD_FAILED,\n\tSTART_DELETE_DASHBOARD,\n\tDELETE_DASHBOARD_SUCCESS,\n\tDELETE_DASHBOARD_FAILED,\n\tSET_DASHBOARD,\n\tSUBSCRIBE_DASHBOARD,\n\tUNSUBSCRIBE_DASHBOARD,\n} from './action-types';\n\nexport function fetchDashboardsAction(userId) {\n\treturn {\n\t\ttype: START_FETCH_DASHBOARDS,\n\t\tuserId,\n\t};\n}\n\nexport function fetchDashboardsSuccessAction(dashboards) {\n\treturn {\n\t\ttype: FETCH_DASHBOARDS_SUCCESS,\n\t\tdashboards,\n\t};\n}\n\nexport function fetchDashboardsFailedAction(error) {\n\treturn {\n\t\ttype: FETCH_DASHBOARDS_FAILED,\n\t\terror,\n\t};\n}\n\nexport function createDashboardAction(title) {\n\treturn {\n\t\ttype: START_CREATE_DASHBOARD,\n\t\ttitle,\n\t};\n}\n\nexport function createDashboardSuccessAction() {\n\treturn {\n\t\ttype: CREATE_DASHBOARD_SUCCESS,\n\t};\n}\n\nexport function createDashboardFailedAction(error) {\n\treturn {\n\t\ttype: CREATE_DASHBOARD_FAILED,\n\t\terror,\n\t};\n}\n\nexport function updateDashboardAction(dashboardId, dashboard = {}) {\n\treturn {\n\t\ttype: START_UPDATE_DASHBOARD,\n\t\tdashboardId,\n\t\tdashboard,\n\t};\n}\n\nexport function updateDashboardSuccessAction() {\n\treturn {\n\t\ttype: UPDATE_DASHBOARD_SUCCESS,\n\t};\n}\n\nexport function updateDashboardFailedAction(error) {\n\treturn {\n\t\ttype: UPDATE_DASHBOARD_FAILED,\n\t\terror,\n\t};\n}\n\nexport function deleteDahsboardAction(dashboardId) {\n\treturn {\n\t\ttype: START_DELETE_DASHBOARD,\n\t\tdashboardId,\n\t};\n}\n\nexport function deleteDashboardSuccessAction() {\n\treturn {\n\t\ttype: DELETE_DASHBOARD_SUCCESS,\n\t};\n}\n\nexport function deleteDashboardFailedAction(error) {\n\treturn {\n\t\ttype: DELETE_DASHBOARD_FAILED,\n\t\terror,\n\t};\n}\n\nexport function setDashboardAction(dashboardId, dashboard) {\n\treturn {\n\t\ttype: SET_DASHBOARD,\n\t\tdashboardId,\n\t\tdashboard,\n\t};\n}\n\nexport function subscribeDashboardAction(userId) {\n\treturn {\n\t\ttype: SUBSCRIBE_DASHBOARD,\n\t\tuserId,\n\t};\n}\n\nexport function unsubscribeDashboardAction() {\n\treturn {\n\t\ttype: UNSUBSCRIBE_DASHBOARD,\n\t};\n}\n","import {\n\tSTART_CREATE_TRELLO_COLUMN,\n\tCREATE_TRELLO_COLUMN_SUCCESS,\n\tCREATE_TRELLO_COLUMN_FAILED,\n\tSTART_UPDATE_TRELLO_COLUMNS,\n\tUPDATE_TRELLO_COLUMNS_SUCCESS,\n\tUPDATE_TRELLO_COLUMNS_FAILED,\n\tSTART_DELETE_TRELLO_COLUMN,\n\tDELETE_TRELLO_COLUMNS_SUCCES,\n\tDELETE_TRELLO_COLUMNS_FAILE,\n\tSUBSCRIBE_TRELLO_COLUMNS,\n\tUNSUBSCRIBE_TRELLO_COLUMNS,\n\tSET_TRELLO_COLUMN,\n} from './action-types';\n\nexport function createTrelloColumnAction(columnName, dashboardId) {\n\treturn {\n\t\ttype: START_CREATE_TRELLO_COLUMN,\n\t\tcolumnName,\n\t\tdashboardId,\n\t};\n}\n\nexport function createTrelloColumnSuccessAction() {\n\treturn {\n\t\ttype: CREATE_TRELLO_COLUMN_SUCCESS,\n\t};\n}\n\nexport function createTrelloColumnFailedAction(error) {\n\treturn {\n\t\ttype: CREATE_TRELLO_COLUMN_FAILED,\n\t\terror,\n\t};\n}\n\nexport function updateTrelloColumnsAction(columns = []) {\n\treturn {\n\t\ttype: START_UPDATE_TRELLO_COLUMNS,\n\t\tcolumns,\n\t};\n}\n\nexport function updateTrelloColumnsSuccessAction() {\n\treturn {\n\t\ttype: UPDATE_TRELLO_COLUMNS_SUCCESS,\n\t};\n}\n\nexport function updateTrelloColumnsFailedAction(error) {\n\treturn {\n\t\ttype: UPDATE_TRELLO_COLUMNS_FAILED,\n\t\terror,\n\t};\n}\n\nexport function deleteTrelloColumnAction(columnId) {\n\treturn {\n\t\ttype: START_DELETE_TRELLO_COLUMN,\n\t\tcolumnId,\n\t};\n}\n\nexport function deleteTrelloColumnSuccessAction() {\n\treturn {\n\t\ttype: DELETE_TRELLO_COLUMNS_SUCCES,\n\t};\n}\n\nexport function deleteTrelloColumnFailedAction(error) {\n\treturn {\n\t\ttype: DELETE_TRELLO_COLUMNS_FAILE,\n\t\terror,\n\t};\n}\n\nexport function subscribeTrelloColumnsAction(dashboardId) {\n\treturn {\n\t\ttype: SUBSCRIBE_TRELLO_COLUMNS,\n\t\tdashboardId,\n\t};\n}\n\nexport function unsubscribeTrelloColumnsAction() {\n\treturn {\n\t\ttype: UNSUBSCRIBE_TRELLO_COLUMNS,\n\t};\n}\n\nexport function setTrelloColumnAction(columnId, column) {\n\treturn {\n\t\ttype: SET_TRELLO_COLUMN,\n\t\tcolumnId,\n\t\tcolumn,\n\t};\n}\n","import {\n\tSTART_CREATE_TRELLO_CARD,\n\tCREATE_TRELLO_CARD_SUCCESS,\n\tCREATE_TRELLO_CARD_FAILED,\n\tSTART_UPDATE_TRELLO_CARDS,\n\tUPDATE_TRELLO_CARDS_SUCCESS,\n\tUPDATE_TRELLO_CARDS_FAILED,\n\tSTART_DELETE_TRELLO_CARD,\n\tDELETE_TRELLO_CARD_SUCCESS,\n\tDELETE_TRELLO_CARD_FAILED,\n\tSUBSCRIBE_TRELLO_CARDS,\n\tUNSUBSCRIBE_TRELLO_CARDS,\n\tSET_TRELLO_CARD,\n} from './action-types';\n\nexport function createTrelloCardAction(title, columnId, dashboardId) {\n\treturn {\n\t\ttype: START_CREATE_TRELLO_CARD,\n\t\ttitle,\n\t\tcolumnId,\n\t\tdashboardId,\n\t};\n}\n\nexport function createTrelloCardSuccessAction() {\n\treturn {\n\t\ttype: CREATE_TRELLO_CARD_SUCCESS,\n\t};\n}\n\nexport function createTrelloCardFailedAction(error) {\n\treturn {\n\t\ttype: CREATE_TRELLO_CARD_FAILED,\n\t\terror,\n\t};\n}\n\nexport function updateTrelloCardsAction(cards = []) {\n\treturn {\n\t\ttype: START_UPDATE_TRELLO_CARDS,\n\t\tcards,\n\t};\n}\n\nexport function updateTrelloCardsSuccessAction() {\n\treturn {\n\t\ttype: UPDATE_TRELLO_CARDS_SUCCESS,\n\t};\n}\n\nexport function updateTrelloCardsFailedAction(error) {\n\treturn {\n\t\ttype: UPDATE_TRELLO_CARDS_FAILED,\n\t\terror,\n\t};\n}\n\nexport function deleteTrelloCardAction(cardId, columnId) {\n\treturn {\n\t\ttype: START_DELETE_TRELLO_CARD,\n\t\tcardId,\n\t\tcolumnId,\n\t};\n}\n\nexport function deleteTrelloCardSuccessAction() {\n\treturn {\n\t\ttype: DELETE_TRELLO_CARD_SUCCESS,\n\t};\n}\n\nexport function deleteTrelloCardFailedAction(error) {\n\treturn {\n\t\ttype: DELETE_TRELLO_CARD_FAILED,\n\t\terror,\n\t};\n}\n\nexport function subscriptTrelloCardsAction(dashboardId) {\n\treturn {\n\t\ttype: SUBSCRIBE_TRELLO_CARDS,\n\t\tdashboardId,\n\t};\n}\n\nexport function unsubscriptTrelloCardsAction() {\n\treturn {\n\t\ttype: UNSUBSCRIBE_TRELLO_CARDS,\n\t};\n}\n\nexport function setTrelloCard(cardId, card) {\n\treturn {\n\t\ttype: SET_TRELLO_CARD,\n\t\tcardId,\n\t\tcard,\n\t};\n}\n","import { SET_USER } from './action-types';\n\nexport function setUserAction(user) {\n\treturn {\n\t\ttype: SET_USER,\n\t\tuser,\n\t};\n}\n","import React, { createContext } from 'react';\nimport { firebaseConfig } from './config';\nimport app from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport {\n\tauthActions,\n\tuserActions,\n\tdashboardActions,\n} from '../repositories/redux/actions';\n\nconst {\n\tlogoutSuccessAction,\n\tloginSuccessAction,\n} = authActions;\nconst {\n\tsetUserAction,\n} = userActions;\nconst {\n\tsubscribeDashboardAction,\n} = dashboardActions;\n\nconst FirebaseContext = createContext(null);\n\nlet firebase = {\n\tapp: null,\n\tdatabase: null,\n\tauth: null,\n};\n\nif (!app.apps.length) {\n\tapp.initializeApp(firebaseConfig);\n\n\tfirebase = {\n\t\tapp: app,\n\t\tdatabase: app.firestore(),\n\t\tauth: app.auth(),\n\t};\n}\n\nexport function configFirebaseListener({ dispatch, getState }) {\n\tconst database = firebase.database;\n\tconst UsersRef = database.collection('users');\n\n\t// Check Auth\n\t// Subscrible Auth changes\n\tfirebase.auth.onAuthStateChanged(function (user) {\n\t\tif (user) {\n\t\t\tconst userId = user.uid;\n\n\t\t\tUsersRef.doc(userId)\n\t\t\t\t.get()\n\t\t\t\t.then(doc => {\n\t\t\t\t\tconst userData = doc.data();\n\n\t\t\t\t\tdispatch(setUserAction(userData));\n\t\t\t\t\tdispatch(subscribeDashboardAction(userId));\n\t\t\t\t})\n\t\t\t\t.catch(err => console.error(err));\n\n\t\t\tdispatch(loginSuccessAction());\n\t\t} else {\n\t\t\tdispatch(logoutSuccessAction());\n\t\t}\n\t});\n}\n\nexport function FirebaseContextWrapper({ children }) {\n\treturn (\n\t\t<FirebaseContext.Provider value={firebase}>\n\t\t\t{children}\n\t\t</FirebaseContext.Provider>\n\t);\n}\n\nexport { FirebaseContext, firebase };\n","export const firebaseConfig = {\n\tapiKey: \"AIzaSyACjlrPcVeb8byRU0TuHMDYQon13PX8YSI\",\n\tauthDomain: \"trelloooo.firebaseapp.com\",\n\tdatabaseURL: \"https://trelloooo.firebaseio.com\",\n\tprojectId: \"trelloooo\",\n\tstorageBucket: \"trelloooo.appspot.com\",\n\tmessagingSenderId: \"1096232526215\",\n\tappId: \"1:1096232526215:web:4e9f133c2f1b3496a23322\",\n\tmeasurementId: \"G-02PWKF47QK\"\n};\n","import React, { lazy } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Login = lazy(() => import('./pages/login'));\nconst SignUp = lazy(() => import('./pages/sign-up'));\nconst ForgetPassword = lazy(() => import('./pages/forget-password'));\nconst Home = lazy(() => import('./pages/home'));\nconst Dashboard = lazy(() => import('./pages/dashboard'));\nconst Test = lazy(() => import('./pages/test'));\n\nexport const RouteKeyEnums = {\n\tROOT: '/',\n\tLOGIN: '/login',\n\tSIGN_UP: '/sign-up',\n\tFORGET_PASSWORD: '/forget-password',\n\tDASHBOARD: '/dashboard',\n\n\tHOME: '/home',\n\n\tTEST: '/test',\n};\n\nconst {\n\tROOT,\n\tLOGIN,\n\tSIGN_UP,\n\tFORGET_PASSWORD,\n\tDASHBOARD,\n\tHOME,\n\tTEST,\n} = RouteKeyEnums;\n\nconst routes = [\n\t{\n\t\tpath: LOGIN,\n\t\texact: true,\n\t\tcomponent: Login,\n\t},\n\t{\n\t\tpath: SIGN_UP,\n\t\texact: true,\n\t\tcomponent: SignUp,\n\t},\n\t{\n\t\tpath: FORGET_PASSWORD,\n\t\texact: true,\n\t\tcomponent: ForgetPassword,\n\t},\n\t{\n\t\tpath: HOME,\n\t\texact: true,\n\t\tcomponent: Home,\n\t},\n\t{\n\t\tpath: `${DASHBOARD}/:dashboardId`,\n\t\texact: true,\n\t\tcomponent: Dashboard,\n\t},\n\t{\n\t\tpath: TEST,\n\t\texact: true,\n\t\tcomponent: Test,\n\t},\n\t{\n\t\tpath: ROOT,\n\t\texact: true,\n\t\tcomponent: () => <Redirect to={HOME}/>,\n\t},\n];\n\nexport default routes;\n","export const START_LOGIN = 'START_LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILED = 'LOGIN_FAILES';\n\nexport const START_LOGOUT = 'START_LOGOUT';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILED = 'LOGOUT_FAILES';\n\nexport const START_SIGNUP = 'START_SIGNUP';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILED = 'SIGNUP_FAILES';\n\n// DASHBOARD\nexport const START_FETCH_DASHBOARDS = 'START_FETCH_DASHBOARDS';\nexport const FETCH_DASHBOARDS_SUCCESS = 'FETCH_DASHBOARDS_SUCCESS';\nexport const FETCH_DASHBOARDS_FAILED = 'FETCH_DASHBOARDS_FAILED';\n\nexport const START_CREATE_DASHBOARD = 'START_CREATE_DASHBOARD';\nexport const CREATE_DASHBOARD_SUCCESS = 'CREATE_DASHBOARD_SUCCESS';\nexport const CREATE_DASHBOARD_FAILED = 'CREATE_DASHBOARD_FAILED';\n\nexport const START_UPDATE_DASHBOARD = 'START_UPDATE_DASHBOARD';\nexport const UPDATE_DASHBOARD_SUCCESS = 'UPDATE_DASHBOARD_SUCCESS';\nexport const UPDATE_DASHBOARD_FAILED = 'UPDATE_DASHBOARD_FAILED';\n\nexport const START_DELETE_DASHBOARD = 'START_DELETE_DASHBOARD';\nexport const DELETE_DASHBOARD_SUCCESS = 'DELETE_DASHBOARD_SUCCESS';\nexport const DELETE_DASHBOARD_FAILED = 'DELETE_DASHBOARD_FAILED';\n\nexport const SUBSCRIBE_DASHBOARD = 'SUBSCRIBE_DASHBOARD';\nexport const UNSUBSCRIBE_DASHBOARD = 'UNSUBSCRIBE_DASHBOARD';\nexport const SET_DASHBOARD = 'SET_DASHBOARD';\n\n// TRELLO_COLUMN\nexport const START_CREATE_TRELLO_COLUMN = 'START_CREATE_TRELLO_COLUMN';\nexport const CREATE_TRELLO_COLUMN_SUCCESS = 'CREATE_TRELLO_COLUMN_SUCCESS';\nexport const CREATE_TRELLO_COLUMN_FAILED = 'CREATE_TRELLO_COLUMN_FAILED';\n\nexport const START_UPDATE_TRELLO_COLUMNS = 'START_UPDATE_TRELLO_COLUMNS';\nexport const UPDATE_TRELLO_COLUMNS_SUCCESS = 'UPDATE_TRELLO_COLUMNS_SUCCESS';\nexport const UPDATE_TRELLO_COLUMNS_FAILED = 'UPDATE_TRELLO_COLUMNS_FAILED';\n\nexport const START_DELETE_TRELLO_COLUMN = 'START_DELETE_TRELLO_COLUMN';\nexport const DELETE_TRELLO_COLUMNS_SUCCES = 'DELETE_TRELLO_COLUMNS_SUCCES';\nexport const DELETE_TRELLO_COLUMNS_FAILE = 'DELETE_TRELLO_COLUMNS_FAILE';\n\nexport const SUBSCRIBE_TRELLO_COLUMNS = 'SUBSCRIBE_TRELLO_COLUMNS';\nexport const UNSUBSCRIBE_TRELLO_COLUMNS = 'UNSUBSCRIBE_TRELLO_COLUMNS';\nexport const SET_TRELLO_COLUMN = 'SET_TRELLO_COLUMN';\n\n// TRELLO_CARD\nexport const START_CREATE_TRELLO_CARD = 'START_CREATE_TRELLO_CARD';\nexport const CREATE_TRELLO_CARD_SUCCESS = 'CREATE_TRELLO_CARD_SUCCESS';\nexport const CREATE_TRELLO_CARD_FAILED = 'CREATE_TRELLO_CARD_FAILED';\n\nexport const START_UPDATE_TRELLO_CARDS = 'START_UPDATE_TRELLO_CARDS';\nexport const UPDATE_TRELLO_CARDS_SUCCESS = 'UPDATE_TRELLO_CARDS_SUCCESS';\nexport const UPDATE_TRELLO_CARDS_FAILED = 'UPDATE_TRELLO_CARDS_FAILED';\n\nexport const START_DELETE_TRELLO_CARD = 'START_DELETE_TRELLO_CARD';\nexport const DELETE_TRELLO_CARD_SUCCESS = 'DELETE_TRELLO_CARD_SUCCESS';\nexport const DELETE_TRELLO_CARD_FAILED = 'DELETE_TRELLO_CARD_FAILED';\n\nexport const SUBSCRIBE_TRELLO_CARDS = 'SUBSCRIBE_TRELLO_CARDS';\nexport const UNSUBSCRIBE_TRELLO_CARDS = 'UNSUBSCRIBE_TRELLO_CARDS';\nexport const SET_TRELLO_CARD = 'SET_TRELLO_CARD';\n\nexport const SET_USER = 'SET_USER';\n","import {\n\tSTART_LOGIN,\n\tLOGIN_SUCCESS,\n\tLOGIN_FAILED,\n\tSTART_LOGOUT,\n\tLOGOUT_SUCCESS,\n\tLOGOUT_FAILED,\n\tSTART_SIGNUP,\n\tSIGNUP_SUCCESS,\n\tSIGNUP_FAILED,\n} from './action-types';\n\nexport function loginAction(email, password) {\n\treturn {\n\t\ttype: START_LOGIN,\n\t\temail,\n\t\tpassword,\n\t};\n}\n\nexport function loginSuccessAction() {\n\treturn {\n\t\ttype: LOGIN_SUCCESS,\n\t};\n}\n\nexport function loginFailedAction(error) {\n\treturn {\n\t\ttype: LOGIN_FAILED,\n\t\terror,\n\t};\n}\n\nexport function logoutAction() {\n\treturn {\n\t\ttype: START_LOGOUT,\n\t};\n}\n\nexport function logoutSuccessAction() {\n\treturn {\n\t\ttype: LOGOUT_SUCCESS,\n\t};\n}\n\nexport function logoutFailedAction(error) {\n\treturn {\n\t\ttype: LOGOUT_FAILED,\n\t\terror,\n\t};\n}\n\nexport function signUpAction(email, password, username) {\n\treturn {\n\t\ttype: START_SIGNUP,\n\t\temail,\n\t\tpassword,\n\t\tusername,\n\t};\n}\n\nexport function signUpSuccessAction() {\n\treturn {\n\t\ttype: SIGNUP_SUCCESS,\n\t};\n}\n\nexport function signUpFailedAction(error) {\n\treturn {\n\t\ttype: SIGNUP_FAILED,\n\t\terror,\n\t};\n}\n"],"sourceRoot":""}