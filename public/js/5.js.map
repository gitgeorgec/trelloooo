{"version":3,"sources":["webpack:///./app/components/trello-column/index.js","webpack:///./app/components/card-modal/title/index.js","webpack:///./app/components/card-modal/index.js","webpack:///./app/components/trello-card/index.js","webpack:///./app/feature/trello-dashboard/index.js","webpack:///./app/pages/dashboard/index.js"],"names":["useStyle","makeStyles","column","width","minHeight","height","padding","backgroundColor","marginRight","header","propTypes","children","PropType","node","data","shape","id","string","title","columnId","onUpdateTitle","func","onCreateCard","onDeleteColumn","TrelloColumn","classes","useState","setTitle","isTitleEditable","setIsTitleEditable","useEffect","Card","variant","className","CardHeader","Typography","component","onClick","Input","value","onChange","e","target","onBlur","autoFocus","action","IconButton","CardActions","Button","fullWidth","color","defaultProps","Title","withStyles","theme","root","margin","spacing","closeButton","position","right","top","palette","grey","props","onClose","other","disableTypography","aria-label","useStyles","textArea","overflow","overflowWrap","isVisible","PropTypes","bool","isRequired","content","onUpdateContent","CardModal","editContent","setEditContent","Dialog","open","scroll","DialogContent","dividers","TextareaAutosize","source","escapeHtml","card","cardTitle","cursor","button","cardId","onUpdate","onDeleteCard","TrelloCard","cardContent","isContentModalVisible","setIsContentModalVisible","stopPropagation","udpateData","produce","draftState","updateData","updateDashboardAction","dashboardActions","createTrelloColumnAction","trelloColumnActions","updateTrelloColumnsAction","deleteTrelloColumnAction","subscribeTrelloColumnsAction","unsubscribeTrelloColumnsAction","createTrelloCardAction","trelloCardActions","updateTrelloCardsAction","deleteTrelloCardAction","subscriptTrelloCardsAction","unsubscriptTrelloCardsAction","dashboard","columnDragable","display","overflowY","maxHeight","whiteSpace","flexShrink","dashboardId","TrelloDashboard","dashboardData","useSelector","state","columnData","trelloColumn","cardData","trelloCard","columnIds","dispatch","useDispatch","_handleCreateCard","_handleUpdateCard","_handleCreateColumn","_handleUpdateColumnTitle","_handleDeleteColumn","_renderCards","cardIds","map","index","draggableId","key","provided","draggableProps","dragHandleProps","ref","innerRef","_handleDeleteCard","onDragEnd","result","destination","type","droppableId","newColumnData","splice","direction","droppableProps","placeholder","match","object","Dashboard","params","withRouter"],"mappings":"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","file":"js/5.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropType from 'prop-types';\nimport {\n\tCard,\n\tCardHeader,\n\tCardActions,\n\tTypography,\n\tInput,\n\tmakeStyles,\n\tButton,\n\tIconButton,\n} from '@material-ui/core';\nimport HighlightOffRoundedIcon from '@material-ui/icons/HighlightOffRounded';\n\nconst useStyle = makeStyles({\n\tcolumn: {\n\t\twidth: 272,\n\t\tminHeight: 78,\n\t\theight: '100%',\n\t\tpadding: 5,\n\t\tbackgroundColor: '#ebecf0',\n\t\tmarginRight: 10,\n\t},\n\theader: {\n\t\tpadding: '5px 10px',\n\t},\n});\n\nconst propTypes = {\n\tchildren: PropType.node,\n\tdata: PropType.shape({\n\t\tid: PropType.string,\n\t\ttitle: PropType.string,\n\t}),\n\tcolumnId: PropType.string,\n\tonUpdateTitle: PropType.func,\n\tonCreateCard: PropType.func,\n\tonDeleteColumn: PropType.func,\n};\nconst defaultProps = {\n\tonUpdateTitle: () => {},\n\tonCreateCard: () => {},\n\tonDeleteColumn: () => {},\n\tdata: {},\n};\n\nfunction TrelloColumn({\n\tchildren,\n\tdata,\n\tcolumnId,\n\tonUpdateTitle,\n\tonCreateCard,\n\tonDeleteColumn,\n}) {\n\tconst classes = useStyle();\n\tconst [title, setTitle] = useState('');\n\tconst [isTitleEditable, setIsTitleEditable] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (data && data.title !== title) {\n\t\t\tsetTitle(data.title);\n\t\t}\n\t}, [data.title]);\n\n\tfunction _handleUpdateTitle() {\n\t\tsetIsTitleEditable(false);\n\n\t\tif (title !== data.title) {\n\t\t\tonUpdateTitle(columnId, title);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Card\n\t\t\tvariant=\"outlined\"\n\t\t\tclassName={classes.column}\n\t\t>\n\t\t\t<CardHeader\n\t\t\t\tclassName={classes.header}\n\t\t\t\ttitle={\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tcomponent=\"h6\"\n\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\tonClick={() => setIsTitleEditable(true)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisTitleEditable ?\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\t\t\tonChange={e => setTitle(e.target.value)}\n\t\t\t\t\t\t\t\t\tonBlur={_handleUpdateTitle}\n\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t/> :\n\t\t\t\t\t\t\t\tdata.title\n\t\t\t\t\t\t}\n\t\t\t\t\t</Typography>\n\t\t\t\t}\n\t\t\t\taction={(\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={() => onDeleteColumn(columnId)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<HighlightOffRoundedIcon/>\n\t\t\t\t\t</IconButton>\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t{children}\n\t\t\t<CardActions>\n\t\t\t\t<Button\n\t\t\t\t\tfullWidth\n\t\t\t\t\tonClick={() => onCreateCard(columnId)}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t>\n\t\t\t\t\tCreate New Card\n\t\t\t\t</Button>\n\t\t\t</CardActions>\n\t\t</Card>\n\t);\n}\n\nTrelloColumn.propTypes = propTypes;\nTrelloColumn.defaultProps = defaultProps;\n\nexport default TrelloColumn;\n","import React from 'react';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n\troot: {\n\t\tmargin: 0,\n\t\tpadding: theme.spacing(2),\n\t},\n\tcloseButton: {\n\t\tposition: 'absolute',\n\t\tright: theme.spacing(1),\n\t\ttop: theme.spacing(1),\n\t\tcolor: theme.palette.grey[500],\n\t},\n});\n\nconst Title = withStyles(styles)(props => {\n\tconst { children, classes, onClose, ...other } = props;\n\treturn (\n\t\t<MuiDialogTitle disableTypography className={classes.root} {...other}>\n\t\t\t<Typography variant=\"h6\">{children}</Typography>\n\t\t\t{onClose ? (\n\t\t\t\t<IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n\t\t\t\t\t<CloseIcon/>\n\t\t\t\t</IconButton>\n\t\t\t) : null}\n\t\t</MuiDialogTitle>\n\t);\n});\n\nexport default Title;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Title from './title';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactMarkdown from 'react-markdown';\n\nconst useStyles = makeStyles({\n\ttextArea: {\n\t\twidth: '100%',\n\t\toverflow: 'hidden',\n\t\toverflowWrap: 'break-word',\n\t\tminHeight: 300,\n\t},\n});\nconst propTypes = {\n\tisVisible: PropTypes.bool.isRequired,\n\ttitle: PropTypes.string,\n\tcontent: PropTypes.string,\n\tonClose: PropTypes.func,\n\tonUpdateContent: PropTypes.func,\n};\nconst defaultProps = {\n\tonClose: () => {},\n\tonUpdateContent: () => {},\n};\n\nfunction CardModal({\n\tisVisible,\n\ttitle,\n\tcontent,\n\tonClose,\n\tonUpdateContent,\n}) {\n\tconst classes = useStyles();\n\tconst [isTitleEditable, setIsTitleEditable] = useState(false);\n\tconst [editContent, setEditContent] = useState('');\n\n\tuseEffect(() => {\n\t\tif (editContent !== content) {\n\t\t\tsetEditContent(content);\n\t\t}\n\t}, [content]);\n\n\tfunction _handleUpdateContent() {\n\t\tsetIsTitleEditable(false);\n\t\tonUpdateContent(editContent);\n\t}\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={isVisible}\n\t\t\tonClose={onClose}\n\t\t\tfullWidth\n\t\t\tscroll=\"paper\"\n\t\t>\n\t\t\t<Title onClose={onClose}>{title}</Title>\n\t\t\t<DialogContent dividers>\n\t\t\t\t{\n\t\t\t\t\tisTitleEditable ?\n\t\t\t\t\t\t<TextareaAutosize\n\t\t\t\t\t\t\tclassName={classes.textArea}\n\t\t\t\t\t\t\tvalue={editContent}\n\t\t\t\t\t\t\tonChange={e => setEditContent(e.target.value)}\n\t\t\t\t\t\t\tonBlur={_handleUpdateContent}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t/> :\n\t\t\t\t\t\t<div onClick={() => setIsTitleEditable(true)}>\n\t\t\t\t\t\t\t<ReactMarkdown\n\t\t\t\t\t\t\t\tclassName={classes.textArea}\n\t\t\t\t\t\t\t\tsource={editContent}\n\t\t\t\t\t\t\t\tescapeHtml\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</DialogContent>\n\t\t</Dialog>\n\t);\n}\n\nCardModal.propTypes = propTypes;\nCardModal.defaultProps = defaultProps;\n\nexport default CardModal;\n","import React, { useState, useEffect } from 'react';\nimport PropType from 'prop-types';\nimport {\n\tCard,\n\tCardHeader,\n\tTypography,\n\tmakeStyles,\n\tIconButton,\n\tInput,\n} from '@material-ui/core';\nimport HighlightOffRoundedIcon from '@material-ui/icons/HighlightOffRounded';\nimport CardModal from '../card-modal';\nimport produce from 'immer';\n\nconst useStyle = makeStyles({\n\tcard: {\n\t\twidth: 256,\n\t\tminHeight: 60,\n\t\tpadding: 5,\n\t\tposition: 'relative',\n\t},\n\tcardTitle: {\n\t\tcursor: 'text',\n\t},\n\tbutton: {\n\t\tposition: 'absolute',\n\t\tright: 5,\n\t\ttop: 16,\n\t},\n});\n\nconst propTypes = {\n\tdata: PropType.shape({\n\t\tid: PropType.string,\n\t\ttitle: PropType.string,\n\t\tcontent: PropType.string,\n\t}),\n\tcardId: PropType.string,\n\tonUpdate: PropType.func,\n\tonDeleteCard: PropType.func,\n};\nconst defaultProps = {\n\tonUpdate: () => {},\n\tonDeleteCard: () => {},\n};\n\nfunction TrelloCard({\n\tdata = {},\n\tonUpdate,\n\tonDeleteCard,\n\tcardId,\n}) {\n\tconst { title: cardTitle, content: cardContent } = data;\n\tconst classes = useStyle();\n\tconst [title, setTitle] = useState(cardTitle);\n\tconst [isTitleEditable, setIsTitleEditable] = useState(false);\n\tconst [isContentModalVisible, setIsContentModalVisible] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (data && cardTitle !== title) {\n\t\t\tsetTitle(cardTitle);\n\t\t}\n\t}, [cardTitle]);\n\n\tfunction _handleUpdateTitle() {\n\t\tconst udpateData = produce(data, draftState => {\n\t\t\tdraftState.title = title;\n\t\t});\n\n\t\tsetIsTitleEditable(false);\n\n\t\tif (title !== cardTitle) {\n\t\t\tonUpdate(cardId, udpateData);\n\t\t}\n\t}\n\n\tfunction _handleUpdateContent(content) {\n\t\tconst updateData = produce(data, draftState => {\n\t\t\tdraftState.content = content;\n\t\t});\n\n\t\tif (cardContent !== content) {\n\t\t\tonUpdate(cardId, updateData);\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Card\n\t\t\t\ttitle={title}\n\t\t\t\tonClick={() => setIsContentModalVisible(true)}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tclassName={classes.card}\n\t\t\t>\n\t\t\t\t<CardHeader\n\t\t\t\t\ttitle={\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tcomponent=\"h6\"\n\t\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\t\tclassName={classes.cardTitle}\n\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\tsetIsTitleEditable(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tisTitleEditable ?\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\t\t\t\tonChange={e => setTitle(e.target.value)}\n\t\t\t\t\t\t\t\t\t\tonBlur={_handleUpdateTitle}\n\t\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\t/> :\n\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t}\n\t\t\t\t\taction={\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tonClick={onDeleteCard}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<HighlightOffRoundedIcon/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Card>\n\t\t\t<CardModal\n\t\t\t\tisVisible={isContentModalVisible}\n\t\t\t\ttitle={cardTitle}\n\t\t\t\tcontent={cardContent}\n\t\t\t\tonClose={() => setIsContentModalVisible(false)}\n\t\t\t\tonUpdateContent={_handleUpdateContent}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nTrelloCard.propTypes = propTypes;\nTrelloCard.defaultProps = defaultProps;\n\nexport default TrelloCard;\n","import React, { useEffect } from 'react';\nimport PropType from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport produce from 'immer';\nimport {\n\tTypography,\n\tmakeStyles,\n\tButton,\n} from '@material-ui/core';\nimport TrelloColumn from '../../components/trello-column';\nimport TrelloCard from '../../components/trello-card';\nimport {\n\tDragDropContext,\n\tDroppable,\n\tDraggable,\n} from 'react-beautiful-dnd';\nimport {\n\tdashboardActions,\n\ttrelloColumnActions,\n\ttrelloCardActions,\n} from '../../repositories/redux/actions';\n\nconst { updateDashboardAction } = dashboardActions;\nconst {\n\tcreateTrelloColumnAction,\n\tupdateTrelloColumnsAction,\n\tdeleteTrelloColumnAction,\n\tsubscribeTrelloColumnsAction,\n\tunsubscribeTrelloColumnsAction,\n} = trelloColumnActions;\nconst {\n\tcreateTrelloCardAction,\n\tupdateTrelloCardsAction,\n\tdeleteTrelloCardAction,\n\tsubscriptTrelloCardsAction,\n\tunsubscriptTrelloCardsAction,\n} = trelloCardActions;\n\nconst useStyle = makeStyles({\n\tdashboard: {\n\t\tpadding: 10,\n\t\theight: 'calc(100vh - 64px)',\n\t},\n\ttitle: {\n\t\tcolor: '#fff',\n\t},\n\tcolumnDragable: {\n\t\theight: '100%',\n\t},\n\tcontent: {\n\t\twidth: '100%',\n\t\tdisplay: 'flex',\n\t\toverflowY: 'scroll',\n\t\tmaxHeight: 'calc(100% - 56px)',\n\t},\n\tbutton: {\n\t\twidth: 272,\n\t\tpadding: 5,\n\t\theight: 78,\n\t\twhiteSpace: 'nowrap',\n\t\tflexShrink: 0,\n\t\tbackgroundColor: '#fff',\n\t},\n});\n\nconst propTypes = {\n\tdashboardId: PropType.string,\n};\n\nfunction TrelloDashboard({\n\tdashboardId,\n}) {\n\tconst classes = useStyle();\n\tconst dashboardData = useSelector(state => state.dashboard).data;\n\tconst columnData = useSelector(state => state.trelloColumn).data;\n\tconst cardData = useSelector(state => state.trelloCard).data;\n\tconst { columnIds = [], title } = dashboardData[dashboardId] ? dashboardData[dashboardId] : {};\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tdispatch(subscribeTrelloColumnsAction(dashboardId));\n\n\t\treturn () => dispatch(unsubscribeTrelloColumnsAction());\n\t}, [dashboardId]);\n\n\tuseEffect(() => {\n\t\tdispatch(subscriptTrelloCardsAction(dashboardId));\n\n\t\treturn () => dispatch(unsubscriptTrelloCardsAction());\n\t}, [dashboardId]);\n\n\tfunction _handleDragEnd(result) {\n\t\tconst { destination, draggableId, source, type } = result;\n\n\t\tif (!destination) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (destination.droppableId === source.droppableId && destination.index === source.index) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === 'column') {\n\t\t\tdispatch(updateDashboardAction(dashboardId, produce(dashboardData[dashboardId], draftState => {\n\t\t\t\tdraftState.columnIds[destination.index] = columnIds[source.index];\n\t\t\t\tdraftState.columnIds[source.index] = columnIds[destination.index];\n\t\t\t})));\n\t\t}\n\n\t\tif (type === 'card') {\n\t\t\tlet newColumnData;\n\n\t\t\tif (destination.droppableId === source.droppableId) {\n\t\t\t\tconst column = columnData[destination.droppableId];\n\n\t\t\t\tnewColumnData = produce(columnData, draftState => {\n\t\t\t\t\tdraftState[destination.droppableId].cardIds[destination.index] = column.cardIds[source.index];\n\t\t\t\t\tdraftState[destination.droppableId].cardIds[source.index] = column.cardIds[destination.index];\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tnewColumnData = produce(columnData, draftState => {\n\t\t\t\t\tdraftState[destination.droppableId].cardIds.splice(destination.index, 0, draggableId);\n\t\t\t\t\tdraftState[source.droppableId].cardIds.splice(source.index, 1);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tdispatch(updateTrelloColumnsAction([\n\t\t\t\t{\n\t\t\t\t\tcolumnId: source.droppableId,\n\t\t\t\t\tcolumn: newColumnData[source.droppableId],\n\t\t\t\t}, {\n\t\t\t\t\tcolumnId: destination.droppableId,\n\t\t\t\t\tcolumn: newColumnData[destination.droppableId],\n\t\t\t\t},\n\t\t\t]));\n\t\t}\n\t}\n\n\tfunction _handleCreateCard(columnId) {\n\t\tdispatch(createTrelloCardAction('New Card', columnId, dashboardId));\n\t}\n\n\tfunction _handleUpdateCard(cardId, card) {\n\t\tdispatch(updateTrelloCardsAction(\n\t\t\t[{\n\t\t\t\tcardId,\n\t\t\t\tcard,\n\t\t\t}]\n\t\t));\n\t}\n\n\tfunction _handleDeleteCard(cardId, columnId) {\n\t\tdispatch(deleteTrelloCardAction(cardId, columnId));\n\t}\n\n\tfunction _handleCreateColumn() {\n\t\tdispatch(createTrelloColumnAction('New Column', dashboardId));\n\t}\n\n\tfunction _handleUpdateColumnTitle(columnId, title) {\n\t\tdispatch(updateTrelloColumnsAction(\n\t\t\t[{\n\t\t\t\tcolumnId,\n\t\t\t\tcolumn: produce(columnData[columnId], draftState => {\n\t\t\t\t\tdraftState.title = title;\n\t\t\t\t}),\n\t\t\t}]\n\t\t));\n\t}\n\n\tfunction _handleDeleteColumn(columnId) {\n\t\tdispatch(deleteTrelloColumnAction(columnId));\n\t}\n\n\tfunction _renderCards(cardIds, columnId) {\n\t\treturn cardIds.map((cardId, index) => (\n\t\t\t<Draggable\n\t\t\t\tdraggableId={cardId}\n\t\t\t\tkey={cardId}\n\t\t\t\tindex={index}\n\t\t\t>\n\t\t\t\t{provided => (\n\t\t\t\t\t<div\n\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TrelloCard\n\t\t\t\t\t\t\tdata={cardData[cardId]}\n\t\t\t\t\t\t\tcardId={cardId}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tonUpdate={_handleUpdateCard}\n\t\t\t\t\t\t\tonDeleteCard={() => _handleDeleteCard(cardId, columnId)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Draggable>\n\t\t));\n\t}\n\n\tfunction _renderColumns() {\n\t\treturn columnIds.map((columnId, index) => (\n\t\t\t<Draggable\n\t\t\t\tdraggableId={columnId}\n\t\t\t\tkey={columnId}\n\t\t\t\tindex={index}\n\t\t\t>\n\t\t\t\t{provided => (\n\t\t\t\t\t<div\n\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\tclassName={classes.columnDragable}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Droppable\n\t\t\t\t\t\t\tdroppableId={columnId}\n\t\t\t\t\t\t\ttype=\"card\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{provided => (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={classes.content}\n\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<TrelloColumn\n\t\t\t\t\t\t\t\t\t\tdata={columnData[columnId]}\n\t\t\t\t\t\t\t\t\t\tcolumnId={columnId}\n\t\t\t\t\t\t\t\t\t\tonCreateCard={_handleCreateCard}\n\t\t\t\t\t\t\t\t\t\tonUpdateTitle={_handleUpdateColumnTitle}\n\t\t\t\t\t\t\t\t\t\tonDeleteColumn={_handleDeleteColumn}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{_renderCards(columnData[columnId] ? columnData[columnId].cardIds : [], columnId)}\n\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t</TrelloColumn>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Draggable>\n\t\t));\n\t}\n\n\treturn (\n\t\t<div className={classes.dashboard}>\n\t\t\t<Typography\n\t\t\t\tcomponent=\"h1\"\n\t\t\t\tvariant=\"h3\"\n\t\t\t\tclassName={classes.title}\n\t\t\t>\n\t\t\t\t{title}\n\t\t\t</Typography>\n\t\t\t<DragDropContext\n\t\t\t\tonDragEnd={_handleDragEnd}\n\t\t\t>\n\t\t\t\t<Droppable\n\t\t\t\t\tdroppableId=\"droppableId\"\n\t\t\t\t\tdirection=\"horizontal\"\n\t\t\t\t\ttype=\"column\"\n\t\t\t\t>\n\t\t\t\t\t{provided => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={classes.content}\n\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{_renderColumns()}\n\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={_handleCreateColumn}\n\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCREATE NEW COLUMN\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Droppable>\n\t\t\t</DragDropContext>\n\t\t</div>\n\t);\n}\n\nTrelloDashboard.propTypes = propTypes;\n\nexport default TrelloDashboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TrelloDashboard from '../../feature/trello-dashboard';\nimport { withRouter } from 'react-router';\n\nconst propTypes = {\n\tmatch: PropTypes.object,\n};\n\nfunction Dashboard({ match }) {\n\tconst { dashboardId } = match.params;\n\n\treturn (\n\t\t<TrelloDashboard\n\t\t\ttitle=\"Dashboard\"\n\t\t\tdashboardId={dashboardId}\n\t\t/>\n\t);\n}\n\nDashboard.propTypes = propTypes;\n\nexport default withRouter(Dashboard);\n\n"],"sourceRoot":""}