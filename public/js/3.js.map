{"version":3,"sources":["webpack:///./app/pages/login/index.js","webpack:///./app/lib/react-utils.js"],"names":["useStyles","makeStyles","layout","display","flexDirection","alignItems","justifyContent","minHeight","form","padding","button","marginTop","link","color","LOADING","LoadingStatusEnum","SUCCESS","SIGN_UP","RouteKeyEnums","FORGET_PASSWORD","HOME","LoginSchema","Yup","shape","email","required","password","propTypes","onNavigate","PropTypes","func","LoginPage","classes","loginLoadingStatus","useSelector","state","auth","prevLoginLoadingStatus","usePrevious","dispatch","useDispatch","useEffect","component","maxWidth","className","variant","align","initialValues","onSubmit","values","setSubmitting","loginAction","validationSchema","errors","touched","handleChange","handleBlur","handleSubmit","margin","fullWidth","label","name","value","onChange","onBlur","error","helperText","type","container","item","xs","to","RouterLink","ref","useRef","current"],"mappings":"0FAAA,qLAoBMA,EAAYC,YAAW,CAC5BC,OAAQ,CACPC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,UAAW,SAEZC,KAAM,CACLC,QAAS,aAEVC,OAAQ,CACPC,UAAW,IAEZC,KAAM,CACLC,MAAO,WAGDC,EAAqBC,IAArBD,QAASE,EAAYD,IAAZC,QACTC,EAAmCC,IAAnCD,QAASE,EAA0BD,IAA1BC,gBAAiBC,EAASF,IAATE,KAC5BC,EAAcC,MAAaC,MAAM,CACtCC,MAAOF,MAAaE,MAAM,iBAAiBC,SAAS,YACpDC,SAAUJ,MAAaG,SAAS,cAG3BE,EAAY,CACjBC,WAAYC,IAAUC,MAGvB,SAASC,EAAT,GAEG,IADFH,EACE,EADFA,WAEMI,EAAUhC,IACViC,EAAqBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,sBACrDI,EAAyBC,YAAYL,GACrCM,EAAWC,cAEjBC,qBAAU,WACLJ,IAA2BvB,GAAWmB,IAAuBjB,GAChEY,EAAWR,KAEV,CAACa,IASJ,OACC,kBAAC,IAAD,CAAWS,UAAU,OAAOC,SAAS,KAAKC,UAAWZ,EAAQ9B,QAC5D,kBAAC,IAAD,CACC2C,QAAQ,WACRD,UAAWZ,EAAQxB,MAEnB,kBAAC,IAAD,CAAYkC,UAAU,KAAKG,QAAQ,KAAKC,MAAM,UAA9C,SAGA,kBAAC,IAAD,CACCC,cAAe,CAAEvB,MAAO,GAAIE,SAAU,IACtCsB,SAlBiB,SAACC,EAAD,GAA+B,IAApBC,EAAoB,EAApBA,cACvB1B,EAAoByB,EAApBzB,MAAOE,EAAauB,EAAbvB,SAEfa,EAASY,sBAAY3B,EAAOE,IAC5BwB,GAAc,IAeXE,iBAAkB/B,IAEjB,YAOK,QANL4B,OAAUzB,EAML,EANKA,MAAOE,EAMZ,EANYA,SACjB2B,EAKK,EALLA,OACAC,EAIK,EAJLA,QACAC,EAGK,EAHLA,aACAC,EAEK,EAFLA,WACAC,EACK,EADLA,aAEA,OACC,0BAAMT,SAAUS,GACf,kBAAC,IAAD,CACCZ,QAAQ,WACRa,OAAO,SACPC,WAAS,EACTC,MAAM,gBACNC,KAAK,QACLC,MAAOtC,EACPuC,SAAUR,EACVS,OAAQR,EACRS,MAAOZ,EAAO7B,OAAS8B,EAAQ9B,MAC/B0C,WAAab,EAAO7B,OAAS8B,EAAQ9B,OAAU6B,EAAO7B,QAEvD,kBAAC,IAAD,CACCqB,QAAQ,WACRa,OAAO,SACPC,WAAS,EACTE,KAAK,WACLD,MAAM,WACNO,KAAK,WACLL,MAAOpC,EACPqC,SAAUR,EACVS,OAAQR,EACRS,MAAOZ,EAAO3B,UAAY4B,EAAQ5B,SAClCwC,WAAab,EAAO3B,UAAY4B,EAAQ5B,UAAa2B,EAAO3B,WAE7D,kBAAC,IAAD,CACCyC,KAAK,SACLR,WAAS,EACTd,QAAQ,YACRhC,MAAM,UACN+B,UAAWZ,EAAQtB,QALpB,iBAcL,kBAAC,IAAD,CAAM0D,WAAS,GACd,kBAAC,IAAD,CAAMC,MAAI,EAACC,IAAE,GACZ,kBAAC,IAAD,CAAMC,GAAIpD,EAAiBuB,UAAW8B,IAAY5B,UAAWZ,EAAQpB,MAArE,qBAID,kBAAC,IAAD,CAAMyD,MAAI,GACT,kBAAC,IAAD,CAAME,GAAItD,EAASyB,UAAW8B,IAAY5B,UAAWZ,EAAQpB,MAA7D,cASLmB,EAAUJ,UAAYA,EAEPI,a,iCCvJf,6CAEO,SAASO,EAAYwB,GAC3B,IAAMW,EAAMC,mBAMZ,OAJAjC,qBAAU,WACTgC,EAAIE,QAAUb,KAGRW,EAAIE","file":"js/3.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core';\nimport { RouteKeyEnums } from '../../routes';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { loginAction } from '../../repositories/redux/actions/auth-actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { usePrevious } from '../../lib/react-utils';\nimport { LoadingStatusEnum } from '../../lib/enums';\n\nconst useStyles = makeStyles({\n\tlayout: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tminHeight: '100vh',\n\t},\n\tform: {\n\t\tpadding: '30px 15px',\n\t},\n\tbutton: {\n\t\tmarginTop: 30,\n\t},\n\tlink: {\n\t\tcolor: 'white',\n\t},\n});\nconst { LOADING, SUCCESS } = LoadingStatusEnum;\nconst { SIGN_UP, FORGET_PASSWORD, HOME } = RouteKeyEnums;\nconst LoginSchema = Yup.object().shape({\n\temail: Yup.string().email('Invalid email').required('Required'),\n\tpassword: Yup.string().required('Required'),\n});\n\nconst propTypes = {\n\tonNavigate: PropTypes.func,\n};\n\nfunction LoginPage({\n\tonNavigate,\n}) {\n\tconst classes = useStyles();\n\tconst loginLoadingStatus = useSelector(state => state.auth.loginLoadingStatus);\n\tconst prevLoginLoadingStatus = usePrevious(loginLoadingStatus);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (prevLoginLoadingStatus === LOADING && loginLoadingStatus === SUCCESS) {\n\t\t\tonNavigate(HOME);\n\t\t}\n\t}, [loginLoadingStatus]);\n\n\tconst _handleLogin = (values, { setSubmitting }) => {\n\t\tconst { email, password } = values;\n\n\t\tdispatch(loginAction(email, password));\n\t\tsetSubmitting(false);\n\t};\n\n\treturn (\n\t\t<Container component=\"main\" maxWidth=\"xs\" className={classes.layout}>\n\t\t\t<Card\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tclassName={classes.form}\n\t\t\t>\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\" align=\"center\">\n\t\t\t\t\tLOGIN\n\t\t\t\t</Typography>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{ email: '', password: '' }}\n\t\t\t\t\tonSubmit={_handleLogin}\n\t\t\t\t\tvalidationSchema={LoginSchema}\n\t\t\t\t>\n\t\t\t\t\t{({\n\t\t\t\t\t\tvalues: { email, password },\n\t\t\t\t\t\terrors,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t}) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={errors.email && touched.email}\n\t\t\t\t\t\t\t\t\thelperText={(errors.email && touched.email) && errors.email}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={errors.password && touched.password}\n\t\t\t\t\t\t\t\t\thelperText={(errors.password && touched.password) && errors.password}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tLogin In\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</Formik>\n\t\t\t</Card>\n\t\t\t<Grid container>\n\t\t\t\t<Grid item xs>\n\t\t\t\t\t<Link to={FORGET_PASSWORD} component={RouterLink} className={classes.link}>\n\t\t\t\t\t\tForgot Password?\n\t\t\t\t\t</Link>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Link to={SIGN_UP} component={RouterLink} className={classes.link}>\n\t\t\t\t\t\tSIGN UP\n\t\t\t\t\t</Link>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Container>\n\t);\n}\n\nLoginPage.propTypes = propTypes;\n\nexport default LoginPage;\n","import { useEffect, useRef } from 'react';\n\nexport function usePrevious(value) {\n\tconst ref = useRef();\n\n\tuseEffect(() => {\n\t\tref.current = value;\n\t});\n\n\treturn ref.current;\n}\n"],"sourceRoot":""}