{"version":3,"sources":["webpack:///./app/pages/home/create-dashboard-modal/index.js","webpack:///./app/pages/home/index.js"],"names":["propTypes","isVisible","PropType","bool","isRequired","onClose","func","onCreate","CreateDashboardModal","Dialog","open","fullWidth","initialValues","name","onSubmit","value","resetForm","validationSchema","Yup","shape","required","errors","touched","values","handleChange","handleSubmit","DialogTitle","DialogContent","TextField","autoFocus","margin","label","onChange","error","helperText","DialogActions","Button","onClick","color","type","defaultProps","DASHBOARD","RouteKeyEnums","createDashboardAction","dashboardActions","deleteDahsboardAction","useStyle","makeStyles","home","display","justifyContent","minHeight","title","textAlign","textShadow","dashboards","gridTemplateColumns","card","width","height","backgroundImage","transition","transform","position","deleteBtn","top","right","action","alignItems","cursor","link","textDecoration","Home","useState","isCreateDashboardModalVisible","setIsCreateDashboardModalVisible","classes","dashboardData","useSelector","state","dashboard","data","dispatch","useDispatch","className","Typography","variant","component","Object","keys","map","id","Card","key","to","CardActionArea","IconButton","e","stopPropagation"],"mappings":"mSAWMA,EAAY,CACjBC,UAAWC,IAASC,KAAKC,WACzBC,QAASH,IAASI,KAClBC,SAAUL,IAASI,MAOpB,SAASE,EAAT,GAIG,IAHFP,EAGE,EAHFA,UACAI,EAEE,EAFFA,QACAE,EACE,EADFA,SAOA,OACC,kBAACE,EAAA,EAAD,CACCC,KAAMT,EACNI,QAASA,EACTM,WAAS,GAET,kBAAC,IAAD,CACCC,cAAe,CAAEC,KAAM,IACvBC,SAbH,SAAuBC,EAAvB,GAA6C,IAAbC,EAAa,EAAbA,UAC/BT,EAASQ,GACTC,KAYEC,iBAAkBC,MAAaC,MAAM,CACpCN,KAAMK,MAAaE,SAAS,wBAG5B,gBACAC,EADA,EACAA,OACAC,EAFA,EAEAA,QACUT,EAHV,EAGAU,OAAUV,KACVW,EAJA,EAIAA,aACAC,EALA,EAKAA,aALA,OAOA,0BAAMX,SAAUW,GACf,kBAACC,EAAA,EAAD,kBACA,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CACCC,WAAS,EACTlB,WAAS,EACTmB,OAAO,QACPjB,KAAK,OACLkB,MAAM,aACNC,SAAUR,EACVS,MAAOZ,EAAOR,MAAQS,EAAQT,KAC9BqB,WAAab,EAAOR,MAAQS,EAAQT,MAASQ,EAAOR,KACpDE,MAAOF,KAGT,kBAACsB,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAQC,QAAShC,EAASiC,MAAM,WAAhC,UAGA,kBAACF,EAAA,EAAD,CAAQE,MAAM,UAAUC,KAAK,UAA7B,gBAWP/B,EAAqBR,UAAYA,EACjCQ,EAAqBgC,aAlEA,CACpBnC,QAAS,aACTE,SAAU,cAkEIC,Q,k9BCrEPiC,EAAcC,IAAdD,UAEPE,EAEGC,IAFHD,sBACAE,EACGD,IADHC,sBAGKC,EAAWC,YAAW,CAC3BC,KAAM,CACLC,QAAS,OACTC,eAAgB,SAChBC,UAAW,sBAEZC,MAAO,CACNd,MAAO,OACPe,UAAW,SACXvB,OAAQ,GACRwB,WAAY,gBAEbC,WAAY,CACXN,QAAS,OACTO,oBAAqB,mBAEtBC,KAAM,CACLC,MAAO,IACPC,OAAQ,IACR7B,OAAQ,GACR8B,gBAAiB,uEACjBC,WAAY,OACZ,UAAW,CACVC,UAAW,eAEZC,SAAU,YAEXC,UAAW,CACVD,SAAU,WACVE,IAAK,EACLC,MAAO,EACP5B,MAAO,QAER6B,OAAQ,CACPlB,QAAS,OACTC,eAAgB,SAChBkB,WAAY,SACZ9B,MAAO,OACPqB,OAAQ,OACRU,OAAQ,UACRhB,UAAW,UAEZiB,KAAM,CACLhC,MAAO,QACPiC,eAAgB,UA6EHC,UAzEf,WAAgB,QAC2DC,oBAAS,GADpE,GACRC,EADQ,KACuBC,EADvB,KAETC,EAAU9B,IACV+B,EAAgBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,QACrDC,EAAWC,cAoCjB,OACC,yBAAKC,UAAWR,EAAQ5B,MACvB,6BACC,kBAACqC,EAAA,EAAD,CACCC,QAAQ,KACRC,UAAU,KACVH,UAAWR,EAAQxB,OAHpB,iBAOA,yBAAKgC,UAAWR,EAAQrB,YAlCLiC,OAAOC,KAAKZ,GAEba,KAAI,SAAAC,GAAE,OACzB,kBAACC,EAAA,EAAD,CAAMC,IAAKF,EAAIP,UAAWR,EAAQnB,MACjC,kBAAC,IAAD,CAAMqC,GAAE,UAAKrD,EAAL,YAAkBkD,GAAMP,UAAWR,EAAQN,MAClD,kBAACyB,EAAA,EAAD,CAAgBX,UAAWR,EAAQT,QAClC,kBAACkB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MACjCV,EAAcc,GAAIvC,SAItB,kBAAC4C,EAAA,EAAD,CACCZ,UAAWR,EAAQZ,UACnB3B,QAAS,SAAA4D,GACRA,EAAEC,kBAlBNhB,EAASrC,EAmBkB8C,MAGxB,kBAAC,IAAD,WAkBA,kBAACC,EAAA,EAAD,CACCR,UAAWR,EAAQnB,KACnBpB,QAAS,kBAAMsC,GAAiC,KAEhD,kBAACoB,EAAA,EAAD,CAAgBX,UAAWR,EAAQT,QAClC,kBAACkB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,0BAOJ,kBAAC,EAAD,CACCtF,UAAWyE,EACXrE,QAAS,kBAAMsE,GAAiC,IAChDpE,SA7DH,YAA0C,IAARM,EAAQ,EAARA,KACjCqE,EAASvC,EAAsB9B,IAC/B8D,GAAiC","file":"js/7.js","sourcesContent":["import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport PropType from 'prop-types';\n\nconst propTypes = {\n\tisVisible: PropType.bool.isRequired,\n\tonClose: PropType.func,\n\tonCreate: PropType.func,\n};\nconst defaultProps = {\n\tonClose: () => {},\n\tonCreate: () => {},\n};\n\nfunction CreateDashboardModal({\n\tisVisible,\n\tonClose,\n\tonCreate,\n}) {\n\tfunction _handleSubmit(value, { resetForm }) {\n\t\tonCreate(value);\n\t\tresetForm();\n\t}\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={isVisible}\n\t\t\tonClose={onClose}\n\t\t\tfullWidth\n\t\t>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{ name: '' }}\n\t\t\t\tonSubmit={_handleSubmit}\n\t\t\t\tvalidationSchema={Yup.object().shape({\n\t\t\t\t\tname: Yup.string().required('Name is required'),\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{({\n\t\t\t\t\terrors,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues: { name },\n\t\t\t\t\thandleChange,\n\t\t\t\t\thandleSubmit,\n\t\t\t\t}) => (\n\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<DialogTitle>New Board</DialogTitle>\n\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tlabel=\"Board Name\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\terror={errors.name && touched.name}\n\t\t\t\t\t\t\t\thelperText={(errors.name && touched.name) && errors.name}\n\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t<Button onClick={onClose} color=\"primary\">\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button color=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\tCreate\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</Dialog>\n\t);\n}\n\nCreateDashboardModal.propTypes = propTypes;\nCreateDashboardModal.defaultProps = defaultProps;\n\nexport default CreateDashboardModal;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { RouteKeyEnums } from '../../routes';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n\tmakeStyles,\n\tCard,\n\tTypography,\n\tCardActionArea,\n\tIconButton,\n} from '@material-ui/core';\nimport HighlightOffRoundedIcon from '@material-ui/icons/HighlightOffRounded';\nimport CreateDashboardModal from './create-dashboard-modal';\nimport { dashboardActions } from '../../repositories/redux/actions';\n\nconst { DASHBOARD } = RouteKeyEnums;\nconst {\n\tcreateDashboardAction,\n\tdeleteDahsboardAction,\n} = dashboardActions;\n\nconst useStyle = makeStyles({\n\thome: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\tminHeight: 'calc(100vh - 64px)',\n\t},\n\ttitle: {\n\t\tcolor: '#fff',\n\t\ttextAlign: 'center',\n\t\tmargin: 20,\n\t\ttextShadow: '2px 2px gray',\n\t},\n\tdashboards: {\n\t\tdisplay: 'grid',\n\t\tgridTemplateColumns: '1fr 1fr 1fr 1fr',\n\t},\n\tcard: {\n\t\twidth: 240,\n\t\theight: 160,\n\t\tmargin: 10,\n\t\tbackgroundImage: 'radial-gradient(circle, #2e2ee3, #0063f7, #0087fa, #00a5f1, #61bfe6)',\n\t\ttransition: '0.2s',\n\t\t'&:hover': {\n\t\t\ttransform: 'scale(1.05)',\n\t\t},\n\t\tposition: 'relative',\n\t},\n\tdeleteBtn: {\n\t\tposition: 'absolute',\n\t\ttop: 0,\n\t\tright: 0,\n\t\tcolor: '#fff',\n\t},\n\taction: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tcolor: '#fff',\n\t\theight: '100%',\n\t\tcursor: 'pointer',\n\t\ttextAlign: 'center',\n\t},\n\tlink: {\n\t\tcolor: 'white',\n\t\ttextDecoration: 'none',\n\t},\n});\n\nfunction Home() {\n\tconst [isCreateDashboardModalVisible, setIsCreateDashboardModalVisible] = useState(false);\n\tconst classes = useStyle();\n\tconst dashboardData = useSelector(state => state.dashboard.data);\n\tconst dispatch = useDispatch();\n\n\tfunction _handleCreateDashborad({ name }) {\n\t\tdispatch(createDashboardAction(name));\n\t\tsetIsCreateDashboardModalVisible(false);\n\t}\n\n\tfunction _handleDeleteDashboard(dashboard) {\n\t\tdispatch(deleteDahsboardAction(dashboard));\n\t}\n\n\tfunction _renderDashBoards() {\n\t\tconst dashboardIds = Object.keys(dashboardData);\n\n\t\treturn dashboardIds.map(id => (\n\t\t\t<Card key={id} className={classes.card}>\n\t\t\t\t<Link to={`${DASHBOARD}/${id}`} className={classes.link}>\n\t\t\t\t\t<CardActionArea className={classes.action}>\n\t\t\t\t\t\t<Typography variant=\"h4\" component=\"h2\">\n\t\t\t\t\t\t\t{dashboardData[id].title}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardActionArea>\n\t\t\t\t</Link>\n\t\t\t\t<IconButton\n\t\t\t\t\tclassName={classes.deleteBtn}\n\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t_handleDeleteDashboard(id);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<HighlightOffRoundedIcon/>\n\t\t\t\t</IconButton>\n\t\t\t</Card>\n\t\t));\n\t}\n\n\treturn (\n\t\t<div className={classes.home}>\n\t\t\t<div>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"h3\"\n\t\t\t\t\tcomponent=\"h1\"\n\t\t\t\t\tclassName={classes.title}\n\t\t\t\t>\n\t\t\t\t\tMY DASHBOARDS\n\t\t\t\t</Typography>\n\t\t\t\t<div className={classes.dashboards}>\n\t\t\t\t\t{_renderDashBoards()}\n\t\t\t\t\t<Card\n\t\t\t\t\t\tclassName={classes.card}\n\t\t\t\t\t\tonClick={() => setIsCreateDashboardModalVisible(true)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CardActionArea className={classes.action}>\n\t\t\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t\t\t+ CREATE DASHBOARD\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</CardActionArea>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<CreateDashboardModal\n\t\t\t\tisVisible={isCreateDashboardModalVisible}\n\t\t\t\tonClose={() => setIsCreateDashboardModalVisible(false)}\n\t\t\t\tonCreate={_handleCreateDashborad}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Home;\n\n"],"sourceRoot":""}